Search.setIndex({"docnames": ["dice_ml", "dice_ml.data_interfaces", "dice_ml.explainer_interfaces", "dice_ml.model_interfaces", "dice_ml.schema", "dice_ml.utils", "dice_ml.utils.sample_architecture", "index", "modules", "notebooks/Benchmarking_different_CF_explanation_methods", "notebooks/DiCE_feature_importances", "notebooks/DiCE_getting_started", "notebooks/DiCE_getting_started_feasible", "notebooks/DiCE_model_agnostic_CFs", "notebooks/DiCE_multiclass_classification_and_regression", "notebooks/DiCE_with_advanced_options", "notebooks/DiCE_with_private_data", "notebooks/nb_index", "readme"], "filenames": ["dice_ml.rst", "dice_ml.data_interfaces.rst", "dice_ml.explainer_interfaces.rst", "dice_ml.model_interfaces.rst", "dice_ml.schema.rst", "dice_ml.utils.rst", "dice_ml.utils.sample_architecture.rst", "index.rst", "modules.rst", "notebooks/Benchmarking_different_CF_explanation_methods.ipynb", "notebooks/DiCE_feature_importances.ipynb", "notebooks/DiCE_getting_started.ipynb", "notebooks/DiCE_getting_started_feasible.ipynb", "notebooks/DiCE_model_agnostic_CFs.ipynb", "notebooks/DiCE_multiclass_classification_and_regression.ipynb", "notebooks/DiCE_with_advanced_options.ipynb", "notebooks/DiCE_with_private_data.ipynb", "notebooks/nb_index.rst", "readme.rst"], "titles": ["dice_ml package", "dice_ml.data_interfaces package", "dice_ml.explainer_interfaces package", "dice_ml.model_interfaces package", "dice_ml.schema package", "dice_ml.utils package", "dice_ml.utils.sample_architecture package", "Diverse Counterfactual Explanations (DiCE) for ML", "dice_ml", "Benchmarking different CF explanation methods", "Estimating local and global feature importance scores using DiCE", "Quick introduction to generating counterfactual explanations using DiCE", "&lt;no title&gt;", "Generating counterfactual explanations with any ML model", "Generating counterfactuals for multi-class classification and regression models", "Advanced options to customize Counterfactual Explanations", "Generating counterfactual explanations without access to training data", "&lt;no title&gt;", "Diverse Counterfactual Explanations (DiCE) for ML"], "terms": {"data_interfac": [0, 2, 5, 8, 10], "base_data_interfac": [0, 8], "private_data_interfac": [0, 8], "privatedata": [0, 1], "create_ohe_param": [0, 1], "de_normalize_data": [0, 1], "fit_label_encod": [0, 1], "from_dummi": [0, 1], "from_label": [0, 1], "get_all_dummy_colnam": [0, 1], "get_data_params_for_gradient_dic": [0, 1], "get_decimal_precis": [0, 1], "get_decoded_data": [0, 1], "get_encoded_categorical_feature_index": [0, 1], "get_features_rang": [0, 1], "get_indexes_of_features_to_vari": [0, 1], "get_inverse_ohe_min_max_normalized_data": [0, 1], "get_mad": [0, 1, 15], "get_minx_maxx": [0, 1], "get_ohe_min_max_normalized_data": [0, 1], "get_valid_feature_rang": [0, 1, 2], "get_valid_mad": [0, 1], "normalize_data": [0, 1, 7, 18], "one_hot_encode_data": [0, 1], "prepare_df_for_ohe_encod": [0, 1], "prepare_query_inst": [0, 1], "public_data_interfac": [0, 8], "publicdata": [0, 1], "get_data_typ": [0, 1], "get_quantiles_from_training_data": [0, 1], "explainer_interfac": [0, 8], "dice_kd": [0, 8, 9], "dicekd": [0, 2, 13], "do_sparsity_check": [0, 2], "duplic": [0, 2], "find_counterfactu": [0, 2], "predict_fn": [0, 2], "vary_valid": [0, 2], "dice_genet": [0, 8], "dicegenet": [0, 2, 13], "compute_loss": [0, 2], "compute_proximity_loss": [0, 2], "compute_sparsity_loss": [0, 2], "compute_yloss": [0, 2], "do_kd_init": [0, 2], "do_cf_initi": [0, 2], "do_loss_initi": [0, 2], "do_param_initi": [0, 2], "do_random_init": [0, 2], "label_decod": [0, 2], "label_decode_cf": [0, 2], "label_encod": [0, 2], "mate": [0, 2], "predict_fn_scor": [0, 2], "update_hyperparamet": [0, 2], "dice_pytorch": [0, 8], "dicepytorch": [0, 2], "compute_dist": [0, 2], "compute_diversity_loss": [0, 2], "compute_regularization_loss": [0, 2], "do_optimizer_initi": [0, 2], "dpp_style": [0, 2], "get_model_output": [0, 2], "initialize_cf": [0, 2], "predict_fn_for_spars": [0, 2], "round_off_cf": [0, 2], "stop_loop": [0, 2], "dice_random": [0, 8], "dicerandom": [0, 2], "get_continuous_sampl": [0, 2], "get_sampl": [0, 2], "dice_tensorflow1": [0, 8], "dicetensorflow1": [0, 2], "generate_counterfactu": [0, 2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "scipy_optim": [0, 2], "tensorflow_optim": [0, 2], "dice_tensorflow2": [0, 8], "dicetensorflow2": [0, 2], "explainer_bas": [0, 8], "explainerbas": [0, 2], "build_kd_tre": [0, 2], "check_permitted_rang": [0, 2], "check_query_instance_valid": [0, 2], "decide_cf_valid": [0, 2], "deserialize_explain": [0, 2], "do_binary_search": [0, 2], "do_linear_search": [0, 2], "do_posthoc_sparsity_enhanc": [0, 2], "feature_import": [0, 2], "get_model_output_from_scor": [0, 2], "global_feature_import": [0, 2, 10, 11], "infer_target_cfs_class": [0, 2], "infer_target_cfs_rang": [0, 2], "is_cf_valid": [0, 2], "local_feature_import": [0, 2, 10, 11], "misc_init": [0, 2], "round_to_precis": [0, 2], "serialize_explain": [0, 2], "setup": [0, 2, 7, 18], "sigmoid": [0, 2, 7, 18], "feasible_base_va": [0, 8, 12], "feasiblebaseva": [0, 2, 12], "train": [0, 1, 2, 3, 5, 6, 7, 10, 12, 14, 15, 17, 18], "feasible_model_approx": [0, 8, 12], "feasiblemodelapprox": [0, 2, 12], "model_interfac": [0, 2, 8], "base_model": [0, 8], "basemodel": [0, 3], "get_gradi": [0, 3], "get_num_output_nod": [0, 3], "get_num_output_nodes2": [0, 3], "get_output": [0, 3], "load_model": [0, 3, 12], "keras_tensorflow_model": [0, 8], "kerastensorflowmodel": [0, 3], "pytorch_model": [0, 8, 12], "pytorchmodel": [0, 3, 12], "set_eval_mod": [0, 3], "schema": [0, 8], "util": [0, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18], "sample_architectur": [0, 5], "vae_model": [0, 5], "except": [0, 8, 11], "systemexcept": [0, 5], "userconfigvalidationexcept": [], "helper": [0, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18], "datatransfom": [0, 5], "feed_data_param": [0, 5], "initialize_transform_func": [0, 5], "inverse_transform": [0, 5], "transform": [0, 1, 2, 3, 5, 9, 10, 11, 12, 13, 14, 15], "get_adult_data_info": [0, 5, 10, 11, 12], "get_adult_income_modelpath": [0, 5, 7, 11, 12, 15, 16, 18], "get_base_gen_cf_initi": [0, 5], "get_custom_dataset_modelpath_pipelin": [0, 5], "get_custom_dataset_modelpath_pipeline_binari": [0, 5], "get_custom_dataset_modelpath_pipeline_multiclass": [0, 5], "get_custom_dataset_modelpath_pipeline_regress": [0, 5], "get_custom_vars_dataset_modelpath_pipelin": [0, 5], "inverse_ohe_min_max_transform": [0, 5], "load_adult_income_dataset": [0, 5, 7, 9, 10, 11, 12, 13, 15, 18], "load_custom_testing_dataset": [0, 5], "load_custom_testing_dataset_binari": [0, 5], "load_custom_testing_dataset_multiclass": [0, 5], "load_custom_testing_dataset_regress": [0, 5], "load_min_max_equal_dataset": [0, 5], "load_outcome_not_last_column_dataset": [0, 5], "ohe_min_max_transform": [0, 5], "save_adult_income_model": [0, 5], "neuralnetwork": [0, 8], "ffnetwork": [0, 5], "forward": [0, 5, 6], "serial": [0, 2, 8], "dummydatainterfac": [0, 5], "to_json": [0, 5, 8, 10], "ml": [0, 1, 2, 3, 5, 12, 16, 17], "class": [0, 1, 2, 3, 5, 6, 7, 10, 11, 12, 13, 17, 18], "backendtyp": [0, 8], "sourc": [0, 1, 2, 3, 5, 6, 7, 12, 18], "base": [0, 1, 2, 3, 5, 6, 7, 11, 12, 15, 16, 18], "object": [0, 2, 3, 5, 7, 11, 12, 13, 15, 16, 17], "all": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18], "sklearn": [0, 3, 5, 7, 8, 9, 10, 11, 13, 14, 18], "tf1": [0, 3, 5, 11, 15, 16], "tf2": [0, 3, 7, 11, 16, 18], "pyt": [0, 3, 11, 12, 16], "pytorch": [0, 2, 3, 7, 8, 9, 12, 13, 16, 17, 18], "tensorflow1": [0, 8], "tensorflow2": [0, 8, 15], "modeltyp": [0, 8], "classifi": [0, 2, 3, 7, 8, 9, 10, 11, 13, 14, 18], "regressor": [0, 3, 7, 8, 11, 14, 18], "samplingstrategi": [0, 8], "genet": [0, 2, 7, 8, 9, 11, 14, 16, 17, 18], "gradient": [0, 2, 7, 8, 11, 16, 18], "kdtree": [0, 2, 8, 9, 13, 14, 16], "random": [0, 2, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18], "counterfactualexplan": [0, 2, 8], "cf_examples_list": [0, 2, 7, 8, 10, 18], "local_import": [0, 2, 8, 10, 11], "none": [0, 1, 2, 3, 5, 10], "summary_import": [0, 8, 10, 11], "version": [0, 7, 10, 11, 12, 16, 18], "A": [0, 1, 2, 5, 7, 9, 11, 12, 15, 18], "store": [0, 2], "counterfactu": [0, 2, 12, 17], "exampl": [0, 2, 7, 10, 12, 13, 16, 17, 18], "one": [0, 1, 2, 5, 6, 7, 11, 15, 18], "more": [0, 2, 7, 10, 12, 14, 15, 16, 17, 18], "input": [0, 1, 2, 3, 7, 10, 11, 12, 14, 15, 16, 18], "featur": [0, 1, 2, 7, 9, 12, 14, 16, 17, 18], "import": [0, 2, 7, 9, 12, 13, 14, 15, 16, 17, 18], "score": [0, 2, 3, 7, 17, 18], "paramet": [0, 2, 3, 5, 7, 11, 13, 14, 15, 16, 18], "list": [0, 1, 2, 7, 12, 18], "counterfactualexampl": [0, 2, 8], "instanc": [0, 1, 2, 6, 7, 10, 11, 12, 13, 14, 15, 16, 18], "estim": [0, 2, 7, 11, 16, 17, 18], "local": [0, 2, 7, 12, 17, 18], "The": [0, 2, 11, 12, 13, 14, 15, 16], "size": [0, 2], "i": [0, 1, 2, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "number": [0, 1, 2, 9, 11, 15], "each": [0, 2, 7, 9, 10, 11, 12, 13, 16, 18], "contain": [0, 1, 2, 3, 14], "global": [0, 2, 7, 17, 18], "set": [0, 1, 2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "properti": [0, 7, 18], "static": [0, 2], "from_json": [0, 8, 10], "json_str": [0, 10], "deseri": 0, "json": [0, 7, 17], "string": [0, 2], "metadata": [0, 7, 8, 10, 12, 16, 18], "explan": [0, 2, 12, 17], "visualize_as_datafram": [0, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18], "display_sparse_df": 0, "true": [0, 1, 2, 3, 5, 10, 11, 12, 13, 14, 15, 16], "show_only_chang": [0, 10, 11, 12, 13, 14, 15, 16], "fals": [0, 1, 2, 3, 7, 9, 11, 12, 13, 18], "visualize_as_list": [0, 8], "point": [0, 2, 10, 11, 12, 13, 16], "differ": [0, 2, 3, 7, 10, 11, 12, 13, 14, 16, 18], "implement": [0, 2, 3, 7, 9, 11, 13, 16, 18], "requir": [0, 1, 2, 3, 7, 11, 12, 16, 18], "onli": [0, 2, 7, 11, 12, 13, 16, 18], "few": [0, 15], "about": [0, 1, 12, 16], "rang": [0, 1, 2, 7, 9, 11, 14, 15, 16, 18], "continu": [0, 1, 2, 7, 11, 12, 13, 15, 16, 18], "level": [0, 1, 2, 7, 10, 11, 15, 18], "categor": [0, 1, 2, 7, 9, 10, 11, 13, 14, 15, 16, 18], "henc": [0, 15, 16], "can": [0, 2, 7, 9, 10, 11, 12, 13, 14, 16, 18], "us": [0, 2, 9, 12, 13, 14, 15, 16, 17], "privat": [0, 1, 7, 9, 10, 11, 12, 13, 15, 16, 18], "whose": [0, 11, 12], "meta": [0, 1, 5, 7, 17], "ar": [0, 1, 2, 3, 7, 11, 12, 13, 15, 16, 18], "avail": [0, 7, 16, 18], "name": [0, 1, 2, 11, 12, 15, 16], "specifi": [0, 2, 7, 11, 12, 15, 16, 18], "appropri": [0, 7, 11, 16, 18], "param": [0, 1], "_basedata": [0, 1], "inform": [0, 1, 7, 14, 16, 18], "decide_implementation_typ": [0, 8], "decid": [0, 2, 7, 8, 15, 18], "public": [0, 1], "To": [0, 7, 11, 16, 18], "add": [0, 2, 7, 11, 18], "new": [0, 2, 7, 10, 11, 13, 14, 16, 18], "return": [0, 1, 2, 3, 5, 9, 11, 12], "an": [0, 1, 2, 3, 5, 7, 10, 11, 12, 13, 15, 16, 18], "elif": 0, "loop": [0, 2, 9], "shown": [0, 11, 13, 16], "below": [0, 10, 11, 12, 13, 14, 15, 16], "method": [0, 1, 2, 3, 10, 11, 12, 13, 14, 16], "framework": [0, 2, 3, 12, 13, 15], "tensorflow": [0, 2, 3, 7, 9, 12, 13, 15, 16, 17, 18], "randomsampl": 0, "kwarg": [0, 2, 5], "interfac": [0, 1, 2, 3, 11, 16], "type": [0, 1, 10, 11, 14, 16], "final_cfs_df": [0, 2, 7, 18], "test_instance_df": [0, 2], "final_cfs_df_spars": [0, 2], "posthoc_sparsity_param": [0, 2, 10], "0": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "desired_rang": [0, 2, 10, 14], "desired_class": [0, 2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "opposit": [0, 2, 7, 10, 11, 12, 13, 15, 16, 18], "model_typ": [0, 2, 10, 14], "visual": [0, 2, 7, 11, 12, 15, 16, 18], "result": [0, 2, 11, 12, 16], "display_df": [0, 8], "df": [0, 1], "cf_example_json_str": 0, "print_list": [0, 8], "li": 0, "serialization_vers": 0, "json_convert": [0, 8], "obj": 0, "function": [0, 2, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 18], "convert": [0, 7, 11, 17], "access": [0, 7, 11, 12, 17, 18], "output": [0, 2, 3, 7, 11, 12, 13, 17, 18], "model_path": [0, 3, 7, 11, 12, 15, 16, 18], "backend": [0, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "func": [0, 3, 5, 7, 11, 16, 18], "kw_arg": [0, 3, 5], "data": [1, 2, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18], "dice": [1, 8, 9, 12, 13, 14, 15, 16, 17], "one_hot_encoded_data": [1, 7, 18], "de": 1, "normal": [1, 2, 5, 15, 16], "from": [1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "1": [1, 2, 6, 7, 9, 10, 11, 12, 14, 16, 17, 18], "origin": [1, 2, 7, 10, 11, 12, 13, 14, 15, 16, 18], "prefix_sep": 1, "_": [1, 7, 9, 18], "get": [1, 2, 5, 15], "dummi": 1, "encod": [1, 2, 5, 6, 11, 12, 15], "k": [1, 2, 7, 9, 13, 18], "label": [1, 2, 7, 18], "back": [1, 2], "valu": [1, 2, 3, 7, 9, 10, 11, 12, 14, 15, 16, 18], "relat": [1, 2, 11], "output_typ": 1, "precis": [1, 2], "hot": [1, 2, 5, 11, 15], "column": [1, 7, 9, 10, 11, 13, 14, 18], "index": [1, 7, 9, 16, 18], "after": 1, "permitted_range_input": 1, "features_dict": 1, "features_to_vari": [1, 2, 7, 10, 11, 13, 18], "transformed_data": 1, "min": [1, 2, 5, 7, 9, 11, 13, 16, 18], "max": [1, 2, 5, 7, 9, 11, 16, 18], "raw": 1, "user": [1, 2, 5, 7, 15, 18], "fed": [1, 2, 5], "format": [1, 2, 11], "should": [1, 2, 6, 7, 11, 16, 18], "datafram": [1, 2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "arrai": [1, 3], "comput": [1, 2, 6, 7, 11, 15, 16, 18], "median": [1, 2, 7, 15, 16, 18], "absolut": [1, 2, 7, 15, 16, 18], "deviat": [1, 7, 15, 16, 18], "form": [1, 11, 12, 15, 16], "query_inst": [1, 2, 7, 9, 10, 11, 12, 13, 15, 16, 18], "dict": 1, "feature_range_input": 1, "assum": 1, "alreadi": 1, "numer": [1, 9, 10, 11, 13, 14, 16], "remain": 1, "same": [1, 2, 7, 11, 12, 13, 16, 18], "todo": [1, 2], "need": [1, 6, 7, 10, 11, 12, 16, 18], "work": [1, 7, 9, 10, 12, 13, 15, 17, 18], "adher": 1, "support": [1, 2, 9, 11, 13, 16], "permitted_rang": [1, 2, 7, 10, 11, 13, 18], "both": [1, 7, 9, 10, 12, 13, 14, 15, 18], "discret": [1, 11, 12], "when": [1, 2, 7, 11, 15, 16, 18], "provid": [1, 2, 7, 10, 11, 12, 13, 14, 15, 16, 18], "_generate_counterfactu": 1, "display_warn": 1, "return_mad": 1, "If": [1, 2, 7, 11, 13, 16, 18], "thei": [1, 7, 11, 13, 18], "practic": [1, 7, 11, 18], "instead": [1, 6, 9], "make": [1, 7, 13, 18], "them": [1, 6, 11, 15, 16], "fall": [1, 15], "One": 1, "creat": [1, 7, 9, 10, 11, 13, 14, 15, 18], "do": [1, 7, 11, 13, 16, 18], "oh": [1, 7, 11, 16, 18], "singl": [1, 2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "prepar": [1, 5], "defin": [1, 2, 5, 6, 7, 11, 15, 17], "test": [1, 2, 3, 7, 9, 10, 11, 13, 14, 16, 18], "": [1, 2, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18], "between": [1, 2, 7, 11, 16, 17, 18], "explain": [1, 2, 7, 12, 18], "thi": [1, 2, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "vice": [1, 12], "versa": [1, 12], "col": [1, 12], "infer": [1, 2, 12], "quantil": 1, "05": [1, 2, 9], "gener": [2, 5, 10, 12, 17], "kd": [2, 7, 9, 11, 17, 18], "tree": [2, 7, 9, 11, 17, 18], "code": [2, 7, 11, 12, 14, 16, 18], "similar": [2, 7, 12, 18], "interpret": [2, 7, 10, 18], "guid": 2, "prototyp": 2, "http": [2, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18], "arxiv": [2, 12], "org": [2, 5, 9, 12, 14, 16], "pdf": [2, 12], "1907": 2, "02584": 2, "cf": [2, 7, 11, 12, 13, 14, 18], "sparsity_weight": 2, "final_indic": 2, "data_df_copi": 2, "query_instance_orig": 2, "total_cf": [2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "stopping_threshold": 2, "posthoc_sparsity_algorithm": 2, "verbos": [2, 7, 9, 13, 18], "limit_steps_l": 2, "find": [2, 7, 11, 13, 16, 18], "queri": [2, 7, 9, 10, 11, 12, 14, 15, 16, 17], "d": [2, 6, 7, 9, 10, 11, 12, 13, 15, 16, 18], "nearest": 2, "desir": [2, 7, 11, 13, 14, 18], "dataset": [2, 5, 7, 10, 12, 14, 16, 17, 18], "input_inst": [2, 3], "predict": [2, 3, 5, 7, 9, 10, 11, 12, 13, 14, 18], "kd_query_inst": 2, "ensur": [2, 7, 13, 18], "we": [2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "vari": [2, 7, 11, 15, 18], "divers": [2, 9, 10, 11, 14, 17], "algorithm": [2, 7, 9, 11, 14, 16, 17, 18], "geco": 2, "qualiti": 2, "real": 2, "time": [2, 9, 10, 11, 12, 13, 15, 16], "2101": 2, "01292": 2, "overal": 2, "loss": [2, 7, 11, 18], "x_hat_unnorm": 2, "query_instance_norm": 2, "weight": [2, 7, 12, 16, 17, 18], "distanc": [2, 7, 11, 15, 16, 18], "two": [2, 7, 11, 12, 16, 18], "vector": 2, "first": [2, 10, 11, 12, 16], "part": 2, "y": [2, 7, 11, 18], "initi": [2, 11, 12, 13, 14, 15, 16], "query_instance_df_dummi": 2, "intial": 2, "other": [2, 7, 9, 10, 11, 12, 13, 15, 16, 18], "variabl": [2, 7, 11, 12, 15, 16, 18], "yloss_typ": [2, 9], "diversity_loss_typ": 2, "feature_weight": [2, 7, 15, 16, 18], "main": 2, "proximity_weight": [2, 7, 15, 18], "diversity_weight": [2, 7, 15, 18], "categorical_penalti": 2, "num_init": 2, "maxiter": 2, "thresh": 2, "through": [2, 7, 11, 15, 16, 18], "labelled_input": 2, "cfs_arr": 2, "k1": 2, "k2": 2, "perform": [2, 6, 11, 16], "produc": [2, 11, 12, 13, 16], "offspr": 2, "actual": [2, 7, 18], "updat": 2, "hyperparamet": 2, "x_hat": 2, "x1": [2, 11, 16], "third": [2, 12], "second": [2, 12], "linear": [2, 7, 18], "equal": [2, 15, 16], "constraint": [2, 7, 11, 12, 18], "sum": 2, "optim": [2, 7, 11, 12, 15, 16, 18], "learning_r": [2, 5], "submethod": 2, "dpp": 2, "matrix": 2, "min_it": 2, "max_it": 2, "project_it": 2, "loss_diff_thr": 2, "loss_converge_maxit": [2, 11], "init_near_query_inst": 2, "tie_random": 2, "descent": 2, "transform_data": [2, 3], "out_tensor": [2, 3], "probabl": [2, 3], "model": [2, 3, 5, 7, 8, 12, 17, 18], "sparsiti": [2, 11, 13, 16], "correct": [2, 16], "assign": [2, 7, 15, 18], "intermedi": 2, "project": [2, 7, 18], "itr": 2, "loss_diff": 2, "determin": [2, 3, 7, 12, 18], "stop": 2, "condit": [2, 11], "sampl": [2, 7, 9, 10, 11, 12, 16, 17, 18], "simpl": [2, 7, 11, 12, 18], "low": [2, 7, 11, 12, 18], "high": [2, 7, 11, 12, 16, 18], "1000": 2, "seed": [2, 13, 15], "fixed_features_valu": 2, "feature_rang": 2, "sampling_random_se": 2, "sampling_s": 2, "x": [2, 5, 6, 7, 11, 12, 16, 18], "tf": [2, 7, 15, 16, 18], "hinge_loss": [2, 9], "inverse_dist": 2, "inverse_mad": 2, "500": 2, "5000": [2, 10], "1e": [2, 12], "5": [2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "diversecf": 2, "adam": [2, 7, 18], "10000": 2, "interest": [2, 7, 11, 18], "dictionari": [2, 12, 15, 16], "row": [2, 11], "total": [2, 9, 10, 11, 13, 14, 15, 16], "take": [2, 6, 15], "default": [2, 7, 11, 12, 13, 15, 16, 18], "outcom": [2, 5, 7, 10, 11, 12, 13, 14, 16, 18], "binari": [2, 7, 11, 12, 16, 18], "classif": [2, 7, 11, 17], "posit": 2, "float": [2, 11, 16], "larger": [2, 11], "close": [2, 11, 13], "either": [2, 11], "randominitcf": 2, "kei": [2, 12, 15, 16], "permit": [2, 11, 13], "metric": [2, 7, 11, 18], "l2_loss": 2, "log_loss": 2, "avg_dist": 2, "correspond": 2, "option": [2, 7, 11, 17, 18], "where": [2, 11, 12, 15, 16], "invers": [2, 15, 16], "devid": 2, "mad": [2, 7, 15, 16, 18], "current": [2, 9, 11, 13], "learn": [2, 5, 7, 9, 12, 13, 14, 15, 17, 18], "rate": 2, "iter": 2, "run": [2, 6, 7, 11, 12, 15, 16, 18], "interv": 2, "mani": [2, 11], "minimum": 2, "success": 2, "check": [2, 7, 9, 11, 18], "converg": [2, 11, 13], "maximum": 2, "hold": 2, "declar": [2, 7, 18], "conserv": [2, 11], "2": [2, 5, 7, 9, 10, 11, 12, 14, 16, 17, 18], "paper": [2, 7, 11, 12, 15, 16, 18], "print": [2, 9, 10, 11, 12, 15], "boolean": [2, 3], "indic": [2, 3, 5, 11, 16], "round": [2, 11, 15, 16], "off": [2, 7, 11, 16, 17], "threshold": 2, "target": [2, 7, 9, 10, 11, 13, 14, 18], "post": [2, 7, 18], "hoc": 2, "oper": [2, 11, 16], "enhanc": 2, "search": [2, 7, 11], "prefer": 2, "larg": 2, "incom": [2, 5, 7, 9, 10, 11, 12, 13, 15, 16, 18], "10k": 2, "1000k": 2, "share": [2, 11, 16], "monoton": [2, 12], "relationship": 2, "upper": 2, "limit": [2, 11, 16], "step": [2, 7, 9, 10, 11, 13, 14, 15, 16, 18], "posthoc_sparsity_enhanc": 2, "see": [2, 7, 9, 11, 12, 14, 15, 16, 18], "diverse_counterfactu": [2, 7, 8], "py": [2, 9, 11, 12, 16], "nelder": 2, "mead": 2, "templat": [2, 3], "subclass": [2, 3, 6], "abc": 2, "predicted_outcome_nam": 2, "comment": [2, 7, 18], "necessari": [2, 11], "els": [2, 9, 12], "remov": 2, "feature_ranges_orig": 2, "model_output": 2, "path": 2, "reload": 2, "memori": [2, 14], "read": 2, "file": [2, 11, 16], "diff": 2, "decimal_prec": 2, "cf_ix": 2, "final_cfs_spars": 2, "current_pr": 2, "until": 2, "chang": [2, 7, 10, 11, 12, 17, 18], "current_pred_orig": 2, "greedi": 2, "move": 2, "toward": [2, 7, 11, 12, 18], "greedili": 2, "reach": [2, 15], "encourag": 2, "final": [2, 7, 11, 18], "panda": [2, 9, 14, 16], "done": [2, 7, 16, 18], "avoid": [2, 12], "infinit": 2, "10": [2, 7, 9, 10, 11, 12, 13, 14, 16, 18], "global_import": 2, "given": [2, 7, 10, 11, 12, 14, 18], "which": [2, 7, 11, 12, 16, 18], "These": [2, 10, 11], "precomput": 2, "everi": [2, 6, 11], "follow": [2, 7, 11, 16, 18], "ignor": [2, 6, 9, 10, 11, 13, 14, 16], "per": [2, 7, 10, 11, 12, 15, 18], "other_paramet": 2, "includ": [2, 11, 12], "summar": [2, 11], "over": [2, 7, 15, 17], "For": [2, 7, 9, 10, 11, 12, 14, 15, 16, 18], "regress": [2, 7, 10, 11, 17], "problem": [2, 7, 18], "ascend": 2, "order": [2, 11, 15, 16], "gradientdesc": 2, "less": [2, 11, 13, 15], "whether": [2, 7, 11, 12, 18], "detail": [2, 7, 11, 12, 15, 18], "messag": [2, 5], "sample_s": 2, "random_se": [2, 13], "reproduc": [2, 15], "accept": 2, "specif": [2, 7, 14, 18], "its": [2, 7, 12, 18], "attribut": [2, 7, 17, 18], "model_scor": [2, 3], "flag": [2, 11, 16], "also": [2, 7, 10, 11, 12, 13, 15, 16, 18], "desired_class_input": 2, "original_pr": 2, "num_output_nod": 2, "call": [2, 5, 6, 11, 12, 16], "multiclass": [2, 7, 17], "downstream": 2, "allow": [2, 7, 11, 12, 15, 18], "desired_range_input": 2, "belong": 2, "test_pr": 2, "z": [2, 6], "vae": [2, 7, 11, 12, 18], "model_out": 2, "target_label": 2, "pre_train": [2, 12], "bool": [2, 6], "pre": [2, 7, 11, 12, 18], "exist": [2, 11, 16], "again": [2, 12, 13], "constraint_typ": 2, "constraint_vari": 2, "constraint_direct": 2, "constraint_reg": 2, "unari": [2, 12], "effect": [2, 12], "cause1": 2, "cause2": 2, "neg": 2, "By": [2, 7, 15, 18], "ha": [2, 7, 11, 12, 16, 18], "tunabl": [2, 7, 15, 18], "hyperparamt": 2, "OR": 3, "inp_siz": 3, "singleton": 3, "kera": [3, 7, 18], "input_tensor": 3, "mode": 3, "autoencod": [5, 6, 7, 18], "decod": [5, 6, 12], "normal_likelihood": [5, 6], "sample_latent_cod": [5, 6], "cf_vae": [5, 6], "compute_elbo": [5, 6], "some": [5, 7, 9, 10, 11, 12, 13, 15, 16, 18], "system": [5, 7, 18], "happen": 5, "dure": [5, 13], "execut": [5, 11, 12, 16], "exception_messag": 5, "str": 5, "describ": [5, 7, 9, 11, 12, 13, 18], "error": [5, 11, 15, 16], "configur": 11, "valid": [7, 11, 18], "containt": 5, "load": [5, 7, 12, 16, 17], "deta": 5, "functiontransform": 5, "scikit": [5, 9, 13, 14, 16], "intern": [5, 7, 14, 15, 18], "stabl": [5, 7, 9, 14, 16, 18], "preprocess": [5, 9, 10, 11, 13, 14], "html": [5, 9, 14, 16], "encoded_s": [5, 6, 12], "cont_minx": 5, "cont_maxx": 5, "margin": [5, 12], "validity_reg": [5, 12], "epoch": [5, 7, 12, 18], "wm1": [5, 12], "wm2": [5, 12], "wm3": [5, 12], "only_train": 5, "adult": [5, 9, 12, 13, 15, 16], "archiv": [5, 9, 11, 12, 13, 15, 16], "ic": [5, 9, 11, 12, 13, 15, 16], "uci": [5, 9, 11, 12, 13, 15, 16], "edu": [5, 9, 11, 12, 13, 15, 16], "analysi": 5, "rpub": 5, "com": [5, 7, 18], "h_zhu": 5, "235617": 5, "adult_data": 5, "modelpath": 5, "test_fract": 5, "random_st": [5, 7, 9, 10, 11, 13, 14, 18], "arg": 5, "ani": [5, 7, 10, 11, 14, 17, 18], "outcome_nam": [5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "data_df": [5, 10], "overridden": 6, "although": 6, "recip": 6, "pass": [6, 13], "within": [6, 7, 11, 13, 18], "afterward": 6, "sinc": [6, 11, 12, 13, 15, 16], "former": 6, "care": 6, "regist": 6, "hook": 6, "while": [6, 11, 12], "latter": 6, "silent": 6, "mean": [6, 7, 11, 12, 15, 18], "logvar": 6, "raxi": 6, "c": [6, 7, 18], "pred_model": 6, "how": [7, 10, 11, 12, 13, 14, 15, 18], "machin": [7, 9, 11, 12, 13, 15, 16, 18], "truth": [7, 18], "yet": [7, 18], "peopl": [7, 18], "ramaravind": [7, 18], "mothil": [7, 18], "amit": [7, 18], "sharma": [7, 18], "chenhao": [7, 18], "tan": [7, 18], "fat": [7, 18], "20": [7, 9, 10, 11, 13, 18], "doc": [7, 9, 18], "live": [7, 18], "jupyt": [7, 18], "blog": [7, 18], "studi": [7, 18], "scienc": [7, 18], "hotel": [7, 18], "book": [7, 18], "analyt": [7, 18], "vidhya": [7, 18], "titan": [7, 18], "critic": [7, 11, 16, 18], "especi": [7, 18], "being": [7, 11, 18], "decis": [7, 11, 18], "societ": [7, 18], "domain": [7, 18], "financ": [7, 18], "healthcar": [7, 18], "educ": [7, 9, 10, 11, 12, 13, 15, 16, 18], "crimin": [7, 18], "justic": [7, 18], "howev": [7, 11, 12, 15, 16, 18], "most": [7, 15, 18], "depend": [7, 18], "approxim": [7, 15, 18], "consid": [7, 18], "person": [7, 11, 15, 18], "who": [7, 18], "appli": [7, 11, 18], "loan": [7, 18], "wa": [7, 11, 16, 18], "reject": [7, 18], "distribut": [7, 18], "financi": [7, 18], "compani": [7, 18], "typic": [7, 18], "mai": [7, 11, 15, 16, 18], "why": [7, 15, 18], "due": [7, 11, 16, 18], "poor": [7, 18], "credit": [7, 18], "histori": [7, 18], "doe": [7, 11, 16, 18], "help": [7, 11, 15, 18], "what": [7, 15, 17, 18], "next": [7, 16, 17, 18], "improv": [7, 18], "chanc": [7, 18], "approv": [7, 18], "futur": [7, 11, 18], "enough": [7, 18], "flip": [7, 18], "even": [7, 11, 12, 18], "changeabl": [7, 18], "gender": [7, 9, 10, 11, 12, 13, 15, 16, 18], "race": [7, 9, 10, 11, 12, 13, 15, 16, 18], "show": [7, 9, 10, 11, 12, 13, 15, 16, 18], "perturb": [7, 11, 12, 15, 18], "would": [7, 11, 12, 15, 18], "have": [7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "receiv": [7, 11, 18], "e": [7, 11, 15, 18], "g": [7, 11, 15, 18], "you": [7, 9, 11, 12, 13, 14, 16, 18], "your": [7, 11, 16, 18], "higher": [7, 11, 15, 18], "000": [7, 18], "In": [7, 9, 11, 12, 13, 15, 18], "word": [7, 18], "complement": [7, 18], "end": [7, 11, 18], "develop": [7, 18], "bar": [7, 18], "difficult": [7, 15, 18], "recent": [7, 18], "research": [7, 18], "core": [7, 11, 14, 16, 18], "idea": [7, 13, 18], "adversari": [7, 18], "therefor": [7, 11, 18], "proxim": [7, 10, 11, 17, 18], "It": [7, 11, 12, 13, 15, 18], "python": [7, 12, 16, 18], "3": [7, 9, 10, 11, 12, 14, 16, 17, 18], "pypi": [7, 18], "pip": [7, 18], "conda": [7, 18], "forg": [7, 18], "latest": [7, 12, 18], "dev": [7, 18], "clone": [7, 18], "repo": [7, 18], "top": [7, 18], "folder": [7, 18], "face": [7, 18], "try": [7, 9, 11, 12, 15, 16, 18], "manual": [7, 16, 18], "r": [7, 12, 18], "txt": [7, 18], "addit": [7, 11, 12, 18], "dependendi": [7, 18], "deep": [7, 17, 18], "deeplearn": [7, 18], "unit": [7, 15, 18], "jsonschema": [], "numpi": [9, 15], "h5py": [], "tqdm": [], "13": [9, 10, 11, 13, 14], "With": [7, 18], "three": [7, 9, 11, 13, 15, 18], "process": [7, 18], "invok": [7, 18], "dice_ml": [7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "continuous_featur": [7, 9, 10, 11, 12, 13, 14, 15, 18], "ag": [7, 9, 10, 11, 12, 13, 15, 16, 18], "hours_per_week": [7, 9, 10, 11, 12, 13, 15, 16, 18], "m": [7, 9, 10, 11, 12, 13, 15, 16, 18], "exp": [7, 10, 11, 12, 15, 16, 18], "now": [7, 9, 10, 11, 12, 13, 14, 15, 18], "lead": [7, 11, 16, 18], "22": [10, 11, 13, 14, 15, 16], "workclass": [7, 9, 10, 11, 12, 13, 15, 16, 18], "h": [7, 9, 10, 11, 12, 13, 15, 16, 18], "grad": [7, 9, 10, 11, 12, 13, 15, 16, 18], "marital_statu": [7, 9, 10, 11, 12, 13, 15, 16, 18], "occup": [7, 9, 10, 11, 12, 13, 15, 16, 18], "servic": [7, 9, 10, 11, 12, 13, 15, 16, 18], "white": [7, 9, 10, 11, 12, 13, 15, 16, 18], "femal": [7, 9, 10, 11, 12, 13, 15, 16, 18], "45": [10, 12, 13, 14, 15, 16], "been": [15, 16], "dice_exp": [7, 9, 11, 12, 15, 16, 18], "4": [7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "save": [7, 18], "wai": [7, 11, 12, 15, 18], "disk": [7, 18], "to_csv": [7, 18], "path_or_buf": [7, 18], "csv": [7, 18], "out": [7, 11, 18], "here": [7, 12, 13, 15, 18], "multi": [7, 11, 17, 18], "permiss": [7, 18], "agnost": [7, 9, 11, 18], "explicit": [7, 11, 18], "et": [7, 18], "al": [7, 18], "2020": [7, 18], "variat": [7, 12, 18], "mahajan": [7, 18], "2019": [7, 18], "baseva": [7, 12, 18], "last": [7, 11, 18], "differenti": [7, 11, 18], "neural": [7, 11, 15, 16, 18], "network": [7, 11, 15, 16, 18], "rais": [7, 18], "issu": [7, 13, 18], "full": [7, 9, 10, 11, 12, 13, 14, 18], "thu": [7, 15, 18], "sensit": [7, 11, 18], "17": [7, 10, 11, 13, 14, 15, 16, 18], "90": [7, 15, 16, 18], "govern": [7, 10, 11, 13, 16, 18], "unknown": [7, 10, 11, 13, 16, 18], "self": [7, 9, 10, 11, 13, 16, 18], "emploi": [7, 9, 10, 11, 13, 16, 18], "assoc": [7, 9, 10, 11, 13, 16, 18], "bachelor": [7, 9, 10, 11, 13, 16, 18], "doctor": [7, 10, 11, 13, 16, 18], "master": [7, 10, 11, 13, 16, 18], "prof": [7, 10, 11, 13, 16, 18], "school": [7, 9, 10, 11, 13, 16, 18], "colleg": [7, 9, 10, 11, 13, 16, 18], "divorc": [7, 10, 11, 13, 16, 18], "marri": [7, 9, 10, 11, 13, 16, 18], "separ": [7, 10, 11, 13, 16, 18], "widow": [7, 10, 11, 16, 18], "blue": [7, 9, 10, 11, 13, 16, 18], "collar": [7, 9, 10, 11, 13, 16, 18], "profession": [7, 9, 10, 11, 13, 16, 18], "sale": [7, 9, 10, 11, 13, 16, 18], "male": [7, 9, 10, 11, 13, 16, 18], "99": [7, 10, 15, 16, 18], "well": [7, 18], "sess": [7, 18], "interactivesess": [7, 18], "split_data": [7, 18], "x_train": [7, 9, 10, 11, 13, 14, 18], "loc": [7, 9, 18], "y_train": [7, 9, 10, 11, 13, 14, 18], "fit": [7, 9, 10, 11, 12, 13, 14, 18], "dens": [7, 18], "ann_model": [7, 18], "sequenti": [7, 18], "layer": [7, 18], "input_shap": [7, 18], "shape": [7, 18], "kernel_regular": [7, 18], "regular": [7, 18], "l1": [7, 18], "001": [7, 18], "activ": [7, 18], "nn": [7, 18], "relu": [7, 18], "compil": [7, 11, 16, 18], "binary_crossentropi": [7, 18], "01": [7, 9, 13, 14, 18], "accuraci": [7, 11, 12, 16, 18], "validation_split": [7, 18], "100": [7, 9, 10, 11, 13, 14, 16, 18], "class_weight": [7, 18], "highlight": [7, 11, 18], "plan": [7, 18], "english": [7, 18], "languag": [7, 12, 18], "too": [7, 12, 18], "acknowledg": [7, 15, 18], "closer": [7, 15, 18], "individu": [7, 11, 15, 18], "profil": [7, 15, 18], "choos": [7, 15, 18], "multipl": [7, 11, 14, 15, 18], "possibl": [7, 11, 15, 18], "kind": [7, 11, 18], "addition": [7, 11, 18], "harder": [7, 15, 18], "than": [7, 11, 13, 15, 16, 18], "hour": [7, 10, 11, 15, 18], "week": [7, 10, 11, 15, 18], "rel": [7, 11, 15, 16, 18], "difficulti": [7, 15, 18], "measur": [7, 10, 15, 18], "divid": [7, 15, 18], "imposs": [7, 11, 18], "reflect": [7, 15, 18], "50": [7, 9, 11, 13, 18], "Being": [7, 18], "stakehold": [7, 18], "made": [7, 11, 18], "subject": [7, 18], "explor": [7, 11, 18], "action": [7, 18], "recours": [7, 18], "altern": [7, 18], "understand": [7, 11, 18], "could": [7, 11, 16, 18], "debug": [7, 18], "potenti": [7, 18], "select": [7, 15, 18], "uncov": [7, 18], "problemat": [7, 18], "95": [7, 18], "aim": [7, 18], "aggreg": [7, 11, 18], "maker": [7, 18], "judg": [7, 18], "particular": [7, 10, 11, 15, 16, 18], "probe": [7, 18], "enabl": [7, 11, 16, 18], "assess": [7, 18], "trust": [7, 18], "evalu": [7, 18], "fair": [7, 18], "ideal": [7, 11, 18], "balanc": [7, 18], "wide": [7, 18], "suggest": [7, 18], "eas": [7, 15, 18], "adopt": [7, 18], "those": [7, 10, 11, 16, 18], "causal": [7, 18], "law": [7, 18], "world": [7, 18], "hardli": [7, 18], "lower": [7, 18], "degre": [7, 18], "ad": [7, 12, 18], "construct": [7, 11, 12, 18], "phrase": [7, 18], "like": [7, 10, 11, 12, 18], "lime": [7, 11, 18], "shap": [7, 11, 18], "necess": [7, 10, 11, 18], "suffici": [7, 11, 18], "bayesian": [7, 18], "better": [7, 11, 18], "pleas": [7, 13, 16, 18], "proceed": [7, 18], "confer": [7, 18], "account": [7, 18], "transpar": [7, 18], "bibtex": [7, 18], "inproceed": [7, 18], "mothilal2020dic": [7, 18], "titl": [7, 18], "author": [7, 18], "booktitl": [7, 18], "page": [7, 18], "607": [7, 18], "617": [7, 18], "year": [7, 11, 18], "welcom": [7, 18], "agre": [7, 18], "contributor": [7, 18], "licens": [7, 18], "agreement": [7, 18], "cla": [7, 18], "right": [7, 18], "grant": [7, 18], "u": [7, 15, 18], "visit": [7, 18], "microsoft": [7, 18], "submit": [7, 18], "pull": [7, 18], "request": [7, 18], "bot": [7, 18], "automat": [7, 18], "decor": [7, 18], "pr": [7, 18], "simpli": [7, 11, 18], "instruct": [7, 11, 16, 18], "onc": [7, 14, 18], "across": [7, 13, 18], "our": [7, 11, 12, 13, 15, 16, 18], "open": [7, 11, 16, 18], "conduct": [7, 18], "faq": [7, 18], "contact": [7, 18], "opencod": [7, 18], "question": [7, 11, 18], "quick": [7, 17], "introduct": [7, 17], "preliminari": [7, 17], "resourc": [7, 17], "independ": [7, 9, 17], "without": [7, 11, 12, 17, 18], "advanc": [7, 12, 16, 17], "custom": [7, 11, 16, 17], "trade": [7, 17], "goal": [7, 13, 17], "modelapprox": 12, "initil": 12, "subpackag": [7, 8], "submodul": [7, 8], "constant": [7, 8, 11, 16], "modul": [7, 8, 9, 11, 12, 13, 14, 15, 16], "counterfactual_explan": [7, 8], "content": [7, 8, 12], "packag": [8, 11, 12, 16], "notebook": [9, 11, 12, 13, 14, 16, 18], "runtim": 9, "np": 9, "timeit": 9, "compos": [9, 10, 11, 13, 14], "columntransform": [9, 10, 11, 13, 14, 16], "model_select": [7, 9, 10, 11, 13, 14, 18], "train_test_split": [7, 9, 10, 11, 13, 14, 18], "pipelin": [9, 10, 11, 13, 14, 16], "standardscal": [9, 10, 13, 14], "onehotencod": [9, 10, 11, 13, 14, 16], "ensembl": [9, 10, 11, 13, 14], "randomforestclassifi": [9, 10, 11, 13, 14, 16], "load_ext": [9, 10, 11, 12, 13, 14, 15, 16], "autoreload": [9, 10, 11, 12, 13, 14, 15, 16], "repositori": [9, 11, 12, 13, 15, 16], "demonstr": [9, 11, 12, 13, 14, 15], "purpos": [9, 11, 12, 15], "filenotfounderror": [], "traceback": [], "lt": [9, 10, 11, 13, 14, 16], "cell": 12, "line": [], "gt": [10, 11, 14], "mnt": [], "amshar": [11, 16], "25": [10, 12, 13, 14], "19": [11, 13, 14], "def": [], "34": [10, 13, 14], "21": [10, 11, 13, 14], "23": [10, 11, 13, 14, 16], "24": [10, 11, 13, 14], "raw_data": [], "genfromtxt": [], "39": [10, 11, 14, 16], "databas": [], "26": [9, 10, 11, 13, 16], "delimit": [], "dtype": 14, "invalid_rais": [], "28": [9, 10, 11, 13, 16], "29": [11, 13, 14, 16], "column_nam": [], "fnlwgt": [], "num": [9, 10, 13, 14], "marit": [10, 11], "statu": [10, 11], "30": [9, 10, 11, 13, 16], "capit": [], "gain": [], "nativ": [], "countri": [], "31": [9, 13, 16], "env": 16, "v3": 16, "8dowhi": 16, "lib": 16, "python3": [12, 16], "8": [9, 10, 11, 12, 13, 14, 16], "site": 16, "npyio": [], "1934": [], "fname": [], "skip_head": [], "skip_foot": [], "missing_valu": [], "filling_valu": [], "usecol": [], "excludelist": [], "deletechar": [], "replace_spac": [], "autostrip": [], "case_sensit": [], "defaultfmt": [], "unpack": [], "usemask": [], "loos": [], "max_row": [], "ndmin": [], "1932": [], "os_fspath": [], "1933": [], "isinst": [], "fid": [], "_datasourc": [], "rt": [], "1935": [], "fid_ctx": [], "contextlib": [], "1936": [], "193": [11, 16], "destpath": [], "newlin": [], "156": [11, 16], "157": [], "158": [], "189": [], "190": [], "192": [], "datasourc": [], "533": [], "530": [], "_file_open": [], "ext": [], "found": [11, 12, 13, 16], "531": [], "532": [], "f": [], "head": [9, 11, 12, 13, 14, 15], "nameerror": [], "soon": [9, 12, 13], "6": [9, 10, 11, 12, 13, 14, 16], "split": [9, 10, 11, 13, 14], "datasetx": [9, 10, 13, 14], "drop": [7, 9, 10, 11, 13, 14, 18], "axi": [9, 10, 11, 13, 14], "x_test": [9, 10, 11, 13, 14], "y_test": [9, 10, 11, 13, 14], "test_siz": [7, 9, 10, 11, 12, 13, 14, 18], "stratifi": [7, 9, 10, 11, 13, 14, 18], "numeric_transform": [9, 10, 13, 14], "scaler": [9, 10, 13, 14], "categorical_transform": [9, 10, 11, 13, 14], "onehot": [9, 10, 11, 13, 14], "handle_unknown": [9, 10, 11, 13, 14], "cat": [9, 10, 11, 12, 13, 14], "append": [9, 10, 11, 13, 14], "clf": [9, 10, 11, 13], "preprocessor": [9, 10, 11, 13, 14], "7": [9, 10, 11, 13, 14, 16], "exp_random": [9, 13], "9": [9, 10, 11, 13, 14, 16], "exp_genet": [9, 13], "exp_kd": [9, 13], "11": [9, 10, 11, 13, 14, 16], "12": [9, 11, 12, 13, 14], "modifi": 9, "num_loop": 9, "14": [9, 10, 11, 13, 14], "elapsed_random": 9, "elapsed_kd": 9, "elapsed_genet": 9, "q": 9, "categorical_feature_nam": 9, "uniqu": 9, "choic": 9, "uniform": 9, "start_tim": 9, "default_tim": 9, "dice_exp_random": [9, 13], "m_random": 9, "s_random": 9, "divmod": 9, "60": [9, 10, 11, 13, 16], "taken": [9, 11, 13, 16], "02d": 9, "sec": [9, 11, 13, 16], "m_kd": 9, "s_kd": 9, "m_genet": 9, "s_genet": 9, "summari": [10, 11], "intuit": [10, 11], "often": [10, 11], "build": [10, 13], "caus": [10, 11, 12], "That": [10, 11, 12], "significantli": [10, 11, 16], "case": [10, 11, 12, 15, 16], "combin": [10, 15], "yield": 10, "downsampl": 10, "reduc": 10, "industri": [10, 11], "50k": [10, 11, 12], "v": [10, 11], "e1": [10, 11], "00": [9, 10, 11, 13, 14, 16], "12it": [], "43": [10, 11, 13, 14, 16], "94": 10, "63": 10, "33": 14, "15": [10, 11, 13, 14, 16], "77": 10, "64": [10, 11, 16], "calcul": 10, "imp": [10, 11], "directli": [10, 16], "leav": 10, "argument": [10, 11, 12, 14], "blank": 10, "18it": [], "repres": 10, "cobj": 10, "57it": [], "46": [10, 13, 16], "test_data": 10, "37": [10, 13, 14], "40": [9, 10, 11, 12, 13], "44": [10, 13], "41": [9, 10, 11, 12, 13, 14], "53": [10, 11, 16], "38": [10, 11, 13, 14, 16], "cfs_list": 10, "73": [10, 16], "88": [10, 11, 14], "42": [10, 12, 13], "83": 10, "59": 10, "55": [10, 16], "27": [9, 10, 13], "80": 10, "81": [10, 14], "36": 10, "47": [10, 14], "67": [10, 13], "52": [10, 13, 14], "84": [], "93": [], "57": [], "78": 13, "82": [10, 13], "51": [10, 13], "98": 10, "72": [10, 13], "91": 10, "56": 14, "66": 10, "69": 11, "75": 10, "97": 16, "70": [11, 13, 16], "65": [9, 10, 11, 13], "68": 10, "54": [10, 11], "48": 10, "79": 10, "74": 16, "89": 10, "71": [10, 13], "62": 11, "dummy_data": 10, "feature_nam": [10, 14], "feature_names_including_target": 10, "null": [10, 12, 14], "imp_r": 10, "o": 10, "scenario": 11, "inspect": 11, "librari": [11, 12, 14, 15, 16], "formal": 11, "known": 11, "answer": 11, "abov": [11, 12, 15, 16], "obtain": 11, "revers": 11, "know": [7, 11, 16, 18], "bring": 11, "logic": 11, "spars": [11, 13], "achiev": 11, "easi": 11, "minim": [7, 11, 18], "anoth": [11, 12], "feasibl": [11, 12, 13, 15], "outsid": 11, "simplest": 11, "complex": [11, 12], "concept": 11, "just": [11, 14], "certain": 11, "releas": 11, "x_i": 11, "keep": 11, "similarli": 11, "absenc": 11, "neither": 11, "nor": 11, "definit": 11, "translat": 11, "easili": 11, "deriv": 11, "rank": 11, "frequenc": 11, "among": 11, "parameter": 11, "refin": 11, "space": 11, "consequ": 11, "compar": [11, 12, 15, 16], "tend": 11, "give": [11, 13], "black": 11, "box": 11, "nearbi": 11, "privaci": 11, "reason": [11, 15], "binar": [11, 12], "32": [9, 10, 11, 13], "35": [9, 10, 11, 13, 14], "descript": [11, 12], "adult_info": [11, 12], "train_dataset": [7, 11, 18], "test_dataset": [7, 11, 18], "want": [11, 13, 16], "four": 11, "snippet": 11, "38it": [], "restrict": 11, "e2": 11, "58it": 9, "e3": 11, "72it": [], "operation": 11, "criterion": 11, "refer": [11, 12, 16], "unifi": 11, "around": 11, "denot": 11, "04": [11, 13, 16], "83it": [], "275": [], "235": [], "175": [], "155": [], "09": [11, 14], "rather": 11, "slower": 11, "compon": 11, "formul": 11, "baselin": [11, 12, 16], "conveni": [11, 12], "16": [10, 11, 12, 13, 14], "instal": 11, "ml_modelpath": [11, 12, 15, 16], "2022": [], "694158": [], "cc": [11, 16], "169": [11, 16], "onednn": [11, 16], "slightli": [11, 16], "turn": [11, 16], "environ": [11, 16], "tf_enable_onednn_opt": [11, 16], "698027": [], "w": [11, 16], "stream_executor": [11, 16], "platform": [11, 16], "dso_load": [11, 16], "dynam": [11, 16], "libcudart": [11, 16], "so": [11, 16], "dlerror": [11, 16], "cannot": [11, 15, 16], "No": [11, 13, 16], "directori": [11, 16], "698044": [], "cuda": [11, 16], "cudart_stub": [11, 16], "cudart": [11, 16], "gpu": [11, 16], "up": [7, 11, 16, 18], "note": [11, 12, 13, 15, 16], "eager": [11, 16], "style": [11, 16], "greater": [11, 16], "graph": [11, 16], "instanti": [11, 12], "49": 10, "357741": [], "libcuda": [11, 16], "357797": [], "cuda_driv": [11, 16], "269": [11, 16], "fail": [11, 16], "cuinit": [11, 16], "303": [11, 16], "357820": [], "cuda_diagnost": [11, 16], "kernel": [11, 16], "driver": [11, 16], "appear": [11, 16], "host": [11, 16], "proc": [11, 16], "nvidia": [11, 16], "358100": [], "cpu_feature_guard": [11, 16], "oneapi": [11, 16], "cpu": [11, 16], "avx2": [11, 16], "avx512f": [11, 16], "avx512_vnni": [11, 16], "fma": [11, 16], "rebuild": [11, 16], "18": [11, 13], "671": 11, "rigor": 11, "experiment": 11, "replic": 11, "info": [11, 14, 16], "dice_interfac": 11, "dice_tensorflow": 11, "03": [9, 10, 13, 14], "07": 10, "618": 11, "968": 11, "35it": [], "constrain": [11, 12, 13], "weigh": [11, 16], "consider": 11, "likelihood": 11, "term": 11, "present": 12, "approach": 12, "ab": 12, "1912": 12, "03277": 12, "remotedisconnect": [], "525": 16, "522": [], "valueerror": [], "url": [], "writeabl": [], "524": [], "_findfil": [], "write": [], "526": 14, "527": [], "_fname": [], "_splitzipext": [], "369": [], "366": [], "filelist": [], "_possible_nam": [], "368": [], "370": [], "_isurl": [], "371": [], "_cach": [], "479": [], "477": [], "478": [], "netfil": [], "urlopen": [], "480": [], "481": [], "del": 12, "usr": [], "urllib": [], "222": [], "timeout": [], "cafil": [], "capath": [], "cadefault": [], "context": [], "220": [], "221": [], "_open": [], "openerdirector": [], "fullurl": [], "req": [], "meth": [], "sy": [], "audit": [], "full_url": [], "header": [], "get_method": [], "respons": [], "528": [], "meth_nam": [], "protocol": [], "_respons": [], "542": [], "539": [], "541": [], "_call_chain": [], "handle_open": [], "543": [], "544": [], "545": [], "502": [], "chain": [], "handler": [], "501": [], "getattr": [], "503": [], "504": [], "1397": [], "httpshandler": [], "https_open": [], "1396": [], "do_open": [], "client": [], "httpsconnect": [], "1398": [], "_context": [], "check_hostnam": [], "_check_hostnam": [], "1358": [], "abstracthttphandl": [], "http_class": [], "http_conn_arg": [], "1356": [], "oserror": [], "err": [], "1357": [], "urlerror": [], "getrespons": [], "1359": [], "1360": [], "1348": [], "httpconnect": [], "1346": [], "1347": [], "begin": [], "1349": [], "connectionerror": [], "1350": [], "316": [], "httprespons": [], "314": [], "non": [14, 15], "315": [], "_read_statu": [], "317": [], "318": [], "break": 16, "285": [], "281": [], "repli": [], "repr": [], "282": [], "283": [], "presum": [], "server": [], "connect": [], "befor": 15, "284": [], "send": [], "remot": [], "286": [], "287": [], "288": [], "data_nam": 12, "becaus": 12, "_2node": 12, "pth": 12, "userwarn": 16, "warn": [15, 16], "in_featur": [], "out_featur": [], "bia": [], "softmax": [], "dim": [], "home": 16, "torch": [], "786": [], "sourcechangewarn": [], "retriev": [], "dump_patch": [], "patch": [], "tool": [], "revert": [], "msg": [], "arug": 12, "re": 12, "repeat": 12, "lr": 12, "batch_siz": 12, "2048": 12, "165": 12, "super": 12, "fast": 12, "might": [12, 16], "notic": 12, "still": [12, 16], "infeas": 12, "adpat": 12, "prodcu": 12, "adapt": 12, "under": 12, "assumpt": 12, "section": 12, "preserv": 12, "ed": 12, "never": 12, "decreas": 12, "increas": [12, 13, 15], "impli": [12, 15], "cause_1": 12, "cause_n": 12, "intend": 12, "direct": 12, "fourth": 12, "penalti": 12, "76": [10, 12], "344": 12, "87": [12, 13], "unlik": 12, "experi": 12, "scmgencf": 12, "oraclegencf": 12, "method_nam": 13, "observ": [13, 15, 16], "contrast": 13, "worsen": 13, "further": 13, "sens": 13, "randomli": 13, "freeli": 13, "control": 13, "best": 13, "quickli": 13, "promot": 13, "previous": 13, "dice_exp_genet": 13, "wish": 13, "closest": 13, "effici": 13, "behind": 13, "itself": 13, "displai": 13, "dice_exp_kd": 13, "rest": 14, "complet": [13, 14], "ident": 14, "load_iri": 14, "fetch_california_h": 14, "randomforestregressor": 14, "pd": [14, 16], "iri": 14, "consist": 14, "iris": 14, "setosa": 14, "versicolour": 14, "virginica": 14, "petal": 14, "sepal": 14, "length": 14, "toy_dataset": 14, "plant": 14, "df_iri": 14, "as_fram": 14, "frame": 14, "cm": 14, "width": 14, "rangeindex": 14, "150": 14, "entri": 14, "149": 14, "count": 14, "float64": 14, "int64": 14, "usag": 14, "kb": 14, "continuous_features_iri": 14, "tolist": 14, "categorical_featur": 14, "clf_iri": 14, "model_iri": 14, "d_iri": 14, "m_iri": 14, "exp_genetic_iri": 14, "As": [14, 15, 16], "lie": 14, "query_instances_iri": 14, "genetic_iri": 14, "39it": [], "california": 14, "hous": 14, "price": 14, "housing_data": 14, "df_hous": 14, "seri": 14, "medinc": 14, "houseag": 14, "averoom": 14, "avebedrm": 14, "popul": 14, "aveoccup": 14, "latitud": 14, "longitud": 14, "3252": 14, "984127": 14, "023810": 14, "322": 14, "555556": 14, "122": 14, "3014": 14, "238137": 14, "971880": 14, "2401": 14, "109842": 14, "86": 14, "585": 14, "2574": 14, "288136": 14, "073446": 14, "496": 14, "802260": 14, "85": [13, 14], "521": 14, "6431": 14, "817352": 14, "073059": 14, "558": 14, "547945": 14, "413": 14, "8462": 14, "281853": 14, "081081": 14, "565": 14, "181467": 14, "422": 14, "20640": 14, "20639": 14, "mb": 14, "continuous_features_h": 14, "regr_hous": 14, "model_h": 14, "d_hous": 14, "m_hous": 14, "exp_genetic_h": 14, "query_instances_h": 14, "genetic_h": 14, "49it": 13, "3487": 14, "930712": 14, "026217": 14, "1554": 14, "910112": 14, "650002": 14, "121": 14, "839996": 14, "49846": [], "5173": 14, "119": 14, "4537603999999984": [], "6184": [], "1543": [], "118": 14, "126689999999999": [], "4511": 14, "992958": 14, "316901": 14, "390": 14, "746479": 14, "200001": 14, "115": [11, 14], "599998": 14, "91159": [], "3682": 14, "394": [], "61": [10, 13, 14], "117": 14, "92": [10, 14], "98180959999999": [], "9167": 14, "393": [], "890800399999997": [], "discuss": [15, 16], "behavior": 15, "supress": 15, "deprec": 15, "compat": 15, "v1": 15, "log": 15, "set_verbos": 15, "631881": [], "635417": [], "635428": [], "artifici": 15, "set_random_se": 15, "set_se": 15, "__version__": [15, 16], "394561": [], "394614": [], "394632": [], "394838": [], "attributeerror": [], "160": [], "query_instances_list": [], "159": [], "set_continuous_feature_index": [], "161": [], "162": [], "163": [], "170": [], "171": [], "172": [], "cf_examples_arr": [], "remap": [], "continuous_feature_index": [], "get_loc": [], "continuous_feature_nam": [], "listcomp": [], "resutl": 15, "convei": 15, "robust": 15, "standard": 15, "affect": 15, "outlier": 15, "let": 15, "seven": 15, "Of": 15, "cours": 15, "sound": 15, "odd": 15, "ride": 15, "handl": 15, "scale": [15, 16], "veri": 15, "categori": [15, 16], "tabl": [12, 15, 18], "extrem": 15, "factor": 15, "captur": [15, 16], "preval": [15, 16], "respect": [15, 16], "basic": 16, "simul": 16, "ordereddict": 16, "randomforest": 16, "sk_modelpath": 16, "pretrain": 16, "329": 16, "unpickl": 16, "invalid": 16, "own": 16, "risk": 16, "model_persist": 16, "secur": 16, "maintain": 16, "decisiontreeclassifi": 16, "02": [9, 13, 14], "popular": 16, "come": 16, "built": 16, "noqa": 16, "988801": [], "992079": [], "992092": [], "820933": [], "820983": [], "821002": [], "821194": [], "382": [], "futurewarn": [], "concat": [], "temp": [], "ohe_base_df": [], "ignore_index": [], "sort": [], "019": 16, "911": 16, "755": 16, "dice_getting_start": 16, "nonetheless": 16, "raiutil": [], "9608": 9, "22027": 9, "14296": 9, "tmp": 9, "ipykernel_2173": [], "3514951616": 9, "settingwithcopywarn": 9, "copi": 9, "slice": 9, "row_index": 9, "col_index": 9, "caveat": 9, "document": 9, "pydata": 9, "user_guid": 9, "view": 9, "versu": 9, "92it": [], "17it": 13, "34it": [], "91it": [], "04it": [], "86it": [], "70it": [], "55it": 9, "08": 11, "06": 9, "58": 10, "89it": [], "66it": [], "37it": [], "095": [], "2023": [11, 16], "752470": [], "756608": [], "756625": [], "948236": [], "948388": [], "948454": [], "948952": [], "44it": [], "cell_typ": 12, "markdown": 12, "execution_count": 12, "dicen": 12, "dice_mln": 12, "functionsn": 12, "n": 12, "autoreloadn": 12, "dice_with_private_data": 12, "ipynb": 12, "scroll": 12, "featuresn": 12, "valuen": 12, "counterfactualsn": 12, "resultsn": 12, "constraintsn": 12, "monotonicn": 12, "nbsphinx": 12, "kernelspec": 12, "display_nam": 12, "language_info": 12, "codemirror_mod": 12, "ipython": 12, "file_extens": 12, "mimetyp": 12, "text": 12, "nbconvert_export": 12, "pygments_lex": 12, "ipython3": 12, "toc": 12, "base_numb": 12, "nav_menu": 12, "number_sect": 12, "sidebar": 12, "skip_h1_titl": 12, "title_cel": 12, "title_sidebar": 12, "toc_cel": 12, "toc_posit": 12, "toc_section_displai": 12, "toc_window_displai": 12, "varinspector": 12, "lennam": 12, "lentyp": 12, "lenvar": 12, "kernels_config": 12, "delete_cmd_postfix": 12, "delete_cmd_prefix": 12, "var_list": 12, "varrefreshcmd": 12, "var_dic_list": 12, "rm": 12, "types_to_exclud": 12, "builtin_function_or_method": 12, "_featur": 12, "window_displai": 12, "nbformat": 12, "nbformat_minor": 12, "79it": [], "07it": [], "perhap": [], "45it": [], "73it": [], "6646": [], "11233": 13, "23580": [], "2571": 13, "15736": 13, "20071": 13, "17010": 13, "15712": 13, "20it": [], "1267": 13, "554": 13, "32it": 11, "12896": 13, "5064": [], "64it": 13, "39714": [], "4560403999999965": [], "2037501000000015": [], "8702": [], "962199599999989": [], "193990299999995": [], "438123": [], "443679": [], "443700": [], "996181": [], "996275": [], "996300": [], "996628": [], "query_instance_to_df": [0, 1], "decode_model_output": [0, 2], "decode_to_original_label": [0, 2], "load_custom_testing_dataset_binary_str": [0, 5], "load_custom_testing_dataset_multiclass_str": [0, 5], "multiclassnetwork": [0, 5], "encoded_label": 2, "ipykernel_169": 9, "11it": 9, "10it": 10, "60it": 10, "01it": [10, 13], "99it": 11, "88it": 11, "68it": 11, "31it": 11, "25it": 11, "295": 11, "205": 11, "138021": 11, "207078": 11, "207103": 11, "626560": 11, "626614": 11, "626637": 11, "627732": 11, "6710000038146973": 11, "6179999709129333": 11, "9679999947547913": 11, "98it": 13, "3155": 13, "8361": 13, "22686": 13, "5158300399780273": 14, "51583": 14, "6976": 14, "124": 14, "6281412000000004": 14, "517150499999996": 14, "8763800263404846": 14, "87638": 14, "94750939999999": 14, "3242802999999945": 14, "320922": 16, "325785": 16, "325804": 16, "666572": 16, "666630": 16, "666650": 16, "666896": 16, "01899999938905239": 16}, "objects": {"": [[0, 0, 0, "-", "dice_ml"]], "dice_ml": [[0, 1, 1, "", "Data"], [0, 1, 1, "", "Dice"], [0, 1, 1, "", "Model"], [0, 0, 0, "-", "constants"], [0, 0, 0, "-", "counterfactual_explanations"], [0, 0, 0, "-", "data"], [1, 0, 0, "-", "data_interfaces"], [0, 0, 0, "-", "dice"], [0, 0, 0, "-", "diverse_counterfactuals"], [2, 0, 0, "-", "explainer_interfaces"], [0, 0, 0, "-", "model"], [3, 0, 0, "-", "model_interfaces"], [4, 0, 0, "-", "schema"], [5, 0, 0, "-", "utils"]], "dice_ml.Data": [[0, 2, 1, "", "decide_implementation_type"]], "dice_ml.Dice": [[0, 2, 1, "", "decide_implementation_type"]], "dice_ml.Model": [[0, 2, 1, "", "decide_implementation_type"]], "dice_ml.constants": [[0, 1, 1, "", "BackEndTypes"], [0, 1, 1, "", "ModelTypes"], [0, 1, 1, "", "SamplingStrategy"]], "dice_ml.constants.BackEndTypes": [[0, 3, 1, "", "ALL"], [0, 3, 1, "", "Pytorch"], [0, 3, 1, "", "Sklearn"], [0, 3, 1, "", "Tensorflow1"], [0, 3, 1, "", "Tensorflow2"]], "dice_ml.constants.ModelTypes": [[0, 3, 1, "", "ALL"], [0, 3, 1, "", "Classifier"], [0, 3, 1, "", "Regressor"]], "dice_ml.constants.SamplingStrategy": [[0, 3, 1, "", "Genetic"], [0, 3, 1, "", "Gradient"], [0, 3, 1, "", "KdTree"], [0, 3, 1, "", "Random"]], "dice_ml.counterfactual_explanations": [[0, 1, 1, "", "CounterfactualExplanations"]], "dice_ml.counterfactual_explanations.CounterfactualExplanations": [[0, 4, 1, "", "cf_examples_list"], [0, 2, 1, "", "from_json"], [0, 4, 1, "", "local_importance"], [0, 4, 1, "", "metadata"], [0, 4, 1, "", "summary_importance"], [0, 2, 1, "", "to_json"], [0, 2, 1, "", "visualize_as_dataframe"], [0, 2, 1, "", "visualize_as_list"]], "dice_ml.data": [[0, 1, 1, "", "Data"], [0, 5, 1, "", "decide"]], "dice_ml.data.Data": [[0, 2, 1, "", "decide_implementation_type"]], "dice_ml.data_interfaces": [[1, 0, 0, "-", "base_data_interface"], [1, 0, 0, "-", "private_data_interface"], [1, 0, 0, "-", "public_data_interface"]], "dice_ml.data_interfaces.private_data_interface": [[1, 1, 1, "", "PrivateData"]], "dice_ml.data_interfaces.private_data_interface.PrivateData": [[1, 2, 1, "", "create_ohe_params"], [1, 2, 1, "", "de_normalize_data"], [1, 2, 1, "", "fit_label_encoders"], [1, 2, 1, "", "from_dummies"], [1, 2, 1, "", "from_label"], [1, 2, 1, "", "get_all_dummy_colnames"], [1, 2, 1, "", "get_data_params_for_gradient_dice"], [1, 2, 1, "", "get_decimal_precisions"], [1, 2, 1, "", "get_decoded_data"], [1, 2, 1, "", "get_encoded_categorical_feature_indexes"], [1, 2, 1, "", "get_features_range"], [1, 2, 1, "", "get_indexes_of_features_to_vary"], [1, 2, 1, "", "get_inverse_ohe_min_max_normalized_data"], [1, 2, 1, "", "get_mads"], [1, 2, 1, "", "get_minx_maxx"], [1, 2, 1, "", "get_ohe_min_max_normalized_data"], [1, 2, 1, "", "get_valid_feature_range"], [1, 2, 1, "", "get_valid_mads"], [1, 2, 1, "", "normalize_data"], [1, 2, 1, "", "one_hot_encode_data"], [1, 2, 1, "", "prepare_df_for_ohe_encoding"], [1, 2, 1, "", "prepare_query_instance"], [1, 2, 1, "", "query_instance_to_df"]], "dice_ml.data_interfaces.public_data_interface": [[1, 1, 1, "", "PublicData"]], "dice_ml.data_interfaces.public_data_interface.PublicData": [[1, 2, 1, "", "create_ohe_params"], [1, 2, 1, "", "de_normalize_data"], [1, 2, 1, "", "fit_label_encoders"], [1, 2, 1, "", "from_dummies"], [1, 2, 1, "", "from_label"], [1, 2, 1, "", "get_all_dummy_colnames"], [1, 2, 1, "", "get_data_params_for_gradient_dice"], [1, 2, 1, "", "get_data_type"], [1, 2, 1, "", "get_decimal_precisions"], [1, 2, 1, "", "get_decoded_data"], [1, 2, 1, "", "get_encoded_categorical_feature_indexes"], [1, 2, 1, "", "get_features_range"], [1, 2, 1, "", "get_indexes_of_features_to_vary"], [1, 2, 1, "", "get_inverse_ohe_min_max_normalized_data"], [1, 2, 1, "", "get_mads"], [1, 2, 1, "", "get_minx_maxx"], [1, 2, 1, "", "get_ohe_min_max_normalized_data"], [1, 2, 1, "", "get_quantiles_from_training_data"], [1, 2, 1, "", "get_valid_feature_range"], [1, 2, 1, "", "get_valid_mads"], [1, 2, 1, "", "normalize_data"], [1, 2, 1, "", "one_hot_encode_data"], [1, 2, 1, "", "prepare_df_for_ohe_encoding"], [1, 2, 1, "", "prepare_query_instance"]], "dice_ml.dice": [[0, 1, 1, "", "Dice"], [0, 5, 1, "", "decide"]], "dice_ml.dice.Dice": [[0, 2, 1, "", "decide_implementation_type"]], "dice_ml.diverse_counterfactuals": [[0, 1, 1, "", "CounterfactualExamples"], [0, 5, 1, "", "json_converter"]], "dice_ml.diverse_counterfactuals.CounterfactualExamples": [[0, 2, 1, "", "display_df"], [0, 2, 1, "", "from_json"], [0, 2, 1, "", "print_list"], [0, 2, 1, "", "to_json"], [0, 2, 1, "", "visualize_as_dataframe"], [0, 2, 1, "", "visualize_as_list"]], "dice_ml.explainer_interfaces": [[2, 0, 0, "-", "dice_KD"], [2, 0, 0, "-", "dice_genetic"], [2, 0, 0, "-", "dice_pytorch"], [2, 0, 0, "-", "dice_random"], [2, 0, 0, "-", "dice_tensorflow1"], [2, 0, 0, "-", "dice_tensorflow2"], [2, 0, 0, "-", "explainer_base"], [2, 0, 0, "-", "feasible_base_vae"], [2, 0, 0, "-", "feasible_model_approx"]], "dice_ml.explainer_interfaces.dice_KD": [[2, 1, 1, "", "DiceKD"]], "dice_ml.explainer_interfaces.dice_KD.DiceKD": [[2, 2, 1, "", "do_sparsity_check"], [2, 2, 1, "", "duplicates"], [2, 2, 1, "", "find_counterfactuals"], [2, 2, 1, "", "predict_fn"], [2, 2, 1, "", "predict_fn_scores"], [2, 2, 1, "", "vary_valid"]], "dice_ml.explainer_interfaces.dice_genetic": [[2, 1, 1, "", "DiceGenetic"]], "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic": [[2, 2, 1, "", "compute_loss"], [2, 2, 1, "", "compute_proximity_loss"], [2, 2, 1, "", "compute_sparsity_loss"], [2, 2, 1, "", "compute_yloss"], [2, 2, 1, "", "do_KD_init"], [2, 2, 1, "", "do_cf_initializations"], [2, 2, 1, "", "do_loss_initializations"], [2, 2, 1, "", "do_param_initializations"], [2, 2, 1, "", "do_random_init"], [2, 2, 1, "", "find_counterfactuals"], [2, 2, 1, "", "get_valid_feature_range"], [2, 2, 1, "", "label_decode"], [2, 2, 1, "", "label_decode_cfs"], [2, 2, 1, "", "label_encode"], [2, 2, 1, "", "mate"], [2, 2, 1, "", "predict_fn"], [2, 2, 1, "", "predict_fn_scores"], [2, 2, 1, "", "update_hyperparameters"]], "dice_ml.explainer_interfaces.dice_pytorch": [[2, 1, 1, "", "DicePyTorch"]], "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch": [[2, 2, 1, "", "compute_dist"], [2, 2, 1, "", "compute_diversity_loss"], [2, 2, 1, "", "compute_loss"], [2, 2, 1, "", "compute_proximity_loss"], [2, 2, 1, "", "compute_regularization_loss"], [2, 2, 1, "", "compute_yloss"], [2, 2, 1, "", "do_cf_initializations"], [2, 2, 1, "", "do_loss_initializations"], [2, 2, 1, "", "do_optimizer_initializations"], [2, 2, 1, "", "dpp_style"], [2, 2, 1, "", "find_counterfactuals"], [2, 2, 1, "", "get_model_output"], [2, 2, 1, "", "initialize_CFs"], [2, 2, 1, "", "predict_fn"], [2, 2, 1, "", "predict_fn_for_sparsity"], [2, 2, 1, "", "round_off_cfs"], [2, 2, 1, "", "stop_loop"], [2, 2, 1, "", "update_hyperparameters"]], "dice_ml.explainer_interfaces.dice_random": [[2, 1, 1, "", "DiceRandom"]], "dice_ml.explainer_interfaces.dice_random.DiceRandom": [[2, 2, 1, "", "get_continuous_samples"], [2, 2, 1, "", "get_samples"]], "dice_ml.explainer_interfaces.dice_tensorflow1": [[2, 1, 1, "", "DiceTensorFlow1"]], "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1": [[2, 2, 1, "", "compute_dist"], [2, 2, 1, "", "compute_diversity_loss"], [2, 2, 1, "", "compute_proximity_loss"], [2, 2, 1, "", "compute_regularization_loss"], [2, 2, 1, "", "compute_yloss"], [2, 2, 1, "", "do_cf_initializations"], [2, 2, 1, "", "do_loss_initializations"], [2, 2, 1, "", "do_optimizer_initializations"], [2, 2, 1, "", "dpp_style"], [2, 2, 1, "", "find_counterfactuals"], [2, 2, 1, "", "generate_counterfactuals"], [2, 2, 1, "", "initialize_CFs"], [2, 2, 1, "", "predict_fn"], [2, 2, 1, "", "predict_fn_for_sparsity"], [2, 2, 1, "", "round_off_cfs"], [2, 2, 1, "", "scipy_optimizers"], [2, 2, 1, "", "stop_loop"], [2, 2, 1, "", "tensorflow_optimizers"], [2, 2, 1, "", "update_hyperparameters"]], "dice_ml.explainer_interfaces.dice_tensorflow2": [[2, 1, 1, "", "DiceTensorFlow2"]], "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2": [[2, 2, 1, "", "compute_dist"], [2, 2, 1, "", "compute_diversity_loss"], [2, 2, 1, "", "compute_loss"], [2, 2, 1, "", "compute_proximity_loss"], [2, 2, 1, "", "compute_regularization_loss"], [2, 2, 1, "", "compute_yloss"], [2, 2, 1, "", "do_cf_initializations"], [2, 2, 1, "", "do_loss_initializations"], [2, 2, 1, "", "do_optimizer_initializations"], [2, 2, 1, "", "dpp_style"], [2, 2, 1, "", "find_counterfactuals"], [2, 2, 1, "", "generate_counterfactuals"], [2, 2, 1, "", "initialize_CFs"], [2, 2, 1, "", "predict_fn"], [2, 2, 1, "", "predict_fn_for_sparsity"], [2, 2, 1, "", "round_off_cfs"], [2, 2, 1, "", "stop_loop"], [2, 2, 1, "", "update_hyperparameters"]], "dice_ml.explainer_interfaces.explainer_base": [[2, 1, 1, "", "ExplainerBase"]], "dice_ml.explainer_interfaces.explainer_base.ExplainerBase": [[2, 2, 1, "", "build_KD_tree"], [2, 2, 1, "", "check_permitted_range"], [2, 2, 1, "", "check_query_instance_validity"], [2, 2, 1, "", "decide_cf_validity"], [2, 2, 1, "", "decode_model_output"], [2, 2, 1, "", "decode_to_original_labels"], [2, 2, 1, "", "deserialize_explainer"], [2, 2, 1, "", "do_binary_search"], [2, 2, 1, "", "do_linear_search"], [2, 2, 1, "", "do_posthoc_sparsity_enhancement"], [2, 2, 1, "", "feature_importance"], [2, 2, 1, "", "generate_counterfactuals"], [2, 2, 1, "", "get_model_output_from_scores"], [2, 2, 1, "", "global_feature_importance"], [2, 2, 1, "", "infer_target_cfs_class"], [2, 2, 1, "", "infer_target_cfs_range"], [2, 2, 1, "", "is_cf_valid"], [2, 2, 1, "", "local_feature_importance"], [2, 2, 1, "", "misc_init"], [2, 2, 1, "", "predict_fn"], [2, 2, 1, "", "predict_fn_for_sparsity"], [2, 2, 1, "", "round_to_precision"], [2, 2, 1, "", "serialize_explainer"], [2, 2, 1, "", "setup"], [2, 2, 1, "", "sigmoid"]], "dice_ml.explainer_interfaces.feasible_base_vae": [[2, 1, 1, "", "FeasibleBaseVAE"]], "dice_ml.explainer_interfaces.feasible_base_vae.FeasibleBaseVAE": [[2, 2, 1, "", "compute_loss"], [2, 2, 1, "", "generate_counterfactuals"], [2, 2, 1, "", "train"]], "dice_ml.explainer_interfaces.feasible_model_approx": [[2, 1, 1, "", "FeasibleModelApprox"]], "dice_ml.explainer_interfaces.feasible_model_approx.FeasibleModelApprox": [[2, 2, 1, "", "train"]], "dice_ml.model": [[0, 1, 1, "", "Model"], [0, 5, 1, "", "decide"]], "dice_ml.model.Model": [[0, 2, 1, "", "decide_implementation_type"]], "dice_ml.model_interfaces": [[3, 0, 0, "-", "base_model"], [3, 0, 0, "-", "keras_tensorflow_model"], [3, 0, 0, "-", "pytorch_model"]], "dice_ml.model_interfaces.base_model": [[3, 1, 1, "", "BaseModel"]], "dice_ml.model_interfaces.base_model.BaseModel": [[3, 2, 1, "", "get_gradient"], [3, 2, 1, "", "get_num_output_nodes"], [3, 2, 1, "", "get_num_output_nodes2"], [3, 2, 1, "", "get_output"], [3, 2, 1, "", "load_model"]], "dice_ml.model_interfaces.keras_tensorflow_model": [[3, 1, 1, "", "KerasTensorFlowModel"]], "dice_ml.model_interfaces.keras_tensorflow_model.KerasTensorFlowModel": [[3, 2, 1, "", "get_gradient"], [3, 2, 1, "", "get_num_output_nodes"], [3, 2, 1, "", "get_output"], [3, 2, 1, "", "load_model"]], "dice_ml.model_interfaces.pytorch_model": [[3, 1, 1, "", "PyTorchModel"]], "dice_ml.model_interfaces.pytorch_model.PyTorchModel": [[3, 2, 1, "", "get_gradient"], [3, 2, 1, "", "get_num_output_nodes"], [3, 2, 1, "", "get_output"], [3, 2, 1, "", "load_model"], [3, 2, 1, "", "set_eval_mode"]], "dice_ml.utils": [[5, 0, 0, "-", "exception"], [5, 0, 0, "-", "helpers"], [5, 0, 0, "-", "neuralnetworks"], [6, 0, 0, "-", "sample_architecture"], [5, 0, 0, "-", "serialize"]], "dice_ml.utils.exception": [[5, 6, 1, "", "SystemException"]], "dice_ml.utils.helpers": [[5, 1, 1, "", "DataTransfomer"], [5, 5, 1, "", "get_adult_data_info"], [5, 5, 1, "", "get_adult_income_modelpath"], [5, 5, 1, "", "get_base_gen_cf_initialization"], [5, 5, 1, "", "get_custom_dataset_modelpath_pipeline"], [5, 5, 1, "", "get_custom_dataset_modelpath_pipeline_binary"], [5, 5, 1, "", "get_custom_dataset_modelpath_pipeline_multiclass"], [5, 5, 1, "", "get_custom_dataset_modelpath_pipeline_regression"], [5, 5, 1, "", "get_custom_vars_dataset_modelpath_pipeline"], [5, 5, 1, "", "inverse_ohe_min_max_transformation"], [5, 5, 1, "", "load_adult_income_dataset"], [5, 5, 1, "", "load_custom_testing_dataset"], [5, 5, 1, "", "load_custom_testing_dataset_binary"], [5, 5, 1, "", "load_custom_testing_dataset_binary_str"], [5, 5, 1, "", "load_custom_testing_dataset_multiclass"], [5, 5, 1, "", "load_custom_testing_dataset_multiclass_str"], [5, 5, 1, "", "load_custom_testing_dataset_regression"], [5, 5, 1, "", "load_min_max_equal_dataset"], [5, 5, 1, "", "load_outcome_not_last_column_dataset"], [5, 5, 1, "", "ohe_min_max_transformation"], [5, 5, 1, "", "save_adult_income_model"]], "dice_ml.utils.helpers.DataTransfomer": [[5, 2, 1, "", "feed_data_params"], [5, 2, 1, "", "initialize_transform_func"], [5, 2, 1, "", "inverse_transform"], [5, 2, 1, "", "transform"]], "dice_ml.utils.neuralnetworks": [[5, 1, 1, "", "FFNetwork"], [5, 1, 1, "", "MulticlassNetwork"]], "dice_ml.utils.neuralnetworks.FFNetwork": [[5, 2, 1, "", "forward"]], "dice_ml.utils.neuralnetworks.MulticlassNetwork": [[5, 2, 1, "", "forward"]], "dice_ml.utils.sample_architecture": [[6, 0, 0, "-", "vae_model"]], "dice_ml.utils.sample_architecture.vae_model": [[6, 1, 1, "", "AutoEncoder"], [6, 1, 1, "", "CF_VAE"]], "dice_ml.utils.sample_architecture.vae_model.AutoEncoder": [[6, 2, 1, "", "decoder"], [6, 2, 1, "", "encoder"], [6, 2, 1, "", "forward"], [6, 2, 1, "", "normal_likelihood"], [6, 2, 1, "", "sample_latent_code"], [6, 3, 1, "", "training"]], "dice_ml.utils.sample_architecture.vae_model.CF_VAE": [[6, 2, 1, "", "compute_elbo"], [6, 2, 1, "", "decoder"], [6, 2, 1, "", "encoder"], [6, 2, 1, "", "forward"], [6, 2, 1, "", "normal_likelihood"], [6, 2, 1, "", "sample_latent_code"], [6, 3, 1, "", "training"]], "dice_ml.utils.serialize": [[5, 1, 1, "", "DummyDataInterface"]], "dice_ml.utils.serialize.DummyDataInterface": [[5, 2, 1, "", "to_json"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"dice_ml": [0, 1, 2, 3, 4, 5, 6, 8], "packag": [0, 1, 2, 3, 4, 5, 6, 7], "subpackag": [0, 5], "submodul": [0, 1, 2, 3, 5, 6], "constant": 0, "modul": [0, 1, 2, 3, 4, 5, 6], "counterfactual_explan": 0, "data": [0, 10, 16], "dice": [0, 7, 10, 11, 18], "diverse_counterfactu": 0, "model": [0, 9, 10, 11, 13, 14, 15, 16], "content": [0, 1, 2, 3, 4, 5, 6], "data_interfac": 1, "base_data_interfac": 1, "private_data_interfac": 1, "public_data_interfac": 1, "explainer_interfac": 2, "dice_kd": 2, "dice_genet": 2, "dice_pytorch": 2, "dice_random": 2, "dice_tensorflow1": 2, "dice_tensorflow2": 2, "explainer_bas": 2, "feasible_base_va": 2, "feasible_model_approx": 2, "model_interfac": 3, "base_model": 3, "keras_tensorflow_model": 3, "pytorch_model": 3, "schema": 4, "util": [5, 6], "except": 5, "helper": 5, "neuralnetwork": 5, "serial": 5, "sample_architectur": 6, "vae_model": 6, "divers": [7, 13, 15, 16, 18], "counterfactu": [7, 9, 10, 11, 13, 14, 15, 16, 18], "explan": [7, 9, 11, 13, 15, 16, 18], "ml": [7, 9, 10, 11, 13, 15, 18], "instal": [7, 18], "get": [7, 18], "start": [7, 18], "support": [7, 18], "method": [7, 9, 18], "gener": [7, 9, 11, 13, 14, 15, 16, 18], "us": [7, 10, 11, 18], "case": [7, 18], "feasibl": [7, 18], "The": [7, 18], "promis": [7, 18], "roadmap": [7, 18], "cite": [7, 18], "contribut": [7, 18], "notebook": [7, 17], "indic": 7, "tabl": 7, "benchmark": 9, "differ": 9, "cf": 9, "load": [9, 10, 11, 13, 15], "dataset": [9, 11, 13, 15], "train": [9, 11, 13, 16], "initi": 9, "estim": 10, "local": [10, 11], "global": [10, 11], "featur": [10, 11, 13, 15], "import": [10, 11], "score": [10, 11], "preliminari": [10, 11], "convert": 10, "output": 10, "json": 10, "object": 10, "quick": 11, "introduct": 11, "over": 11, "adult": 11, "exampl": 11, "attribut": 11, "work": 11, "deep": [11, 16], "learn": [11, 16], "tensorflow": 11, "pytorch": 11, "explain": [11, 16], "more": 11, "resourc": 11, "what": 11, "": 11, "next": 11, "vae": [], "ad": [], "constraint": [], "modelapprox": [], "initil": [], "feasiblemodelapprox": [], "ani": 13, "1": [13, 15], "independ": 13, "random": 13, "sampl": 13, "custom": [13, 15], "select": 13, "vari": 13, "choos": 13, "rang": 13, "2": [13, 15], "genet": 13, "algorithm": 13, "3": [13, 15], "queri": 13, "kd": 13, "tree": 13, "multi": 14, "class": 14, "classif": 14, "regress": 14, "multiclass": 14, "advanc": 15, "option": 15, "chang": 15, "weight": 15, "trade": 15, "off": 15, "between": 15, "proxim": 15, "goal": 15, "without": 16, "access": 16, "defin": 16, "meta": 16, "pre": 16, "sklearn": 16}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"dice_ml package": [[0, "dice-ml-package"]], "Subpackages": [[0, "subpackages"], [5, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [3, "submodules"], [5, "submodules"], [6, "submodules"]], "dice_ml.constants module": [[0, "module-dice_ml.constants"]], "dice_ml.counterfactual_explanations module": [[0, "module-dice_ml.counterfactual_explanations"]], "dice_ml.data module": [[0, "module-dice_ml.data"]], "dice_ml.dice module": [[0, "module-dice_ml.dice"]], "dice_ml.diverse_counterfactuals module": [[0, "module-dice_ml.diverse_counterfactuals"]], "dice_ml.model module": [[0, "module-dice_ml.model"]], "Module contents": [[0, "module-dice_ml"], [1, "module-dice_ml.data_interfaces"], [2, "module-dice_ml.explainer_interfaces"], [3, "module-dice_ml.model_interfaces"], [4, "module-dice_ml.schema"], [5, "module-dice_ml.utils"], [6, "module-dice_ml.utils.sample_architecture"]], "dice_ml.data_interfaces package": [[1, "dice-ml-data-interfaces-package"]], "dice_ml.data_interfaces.base_data_interface module": [[1, "module-dice_ml.data_interfaces.base_data_interface"]], "dice_ml.data_interfaces.private_data_interface module": [[1, "module-dice_ml.data_interfaces.private_data_interface"]], "dice_ml.data_interfaces.public_data_interface module": [[1, "module-dice_ml.data_interfaces.public_data_interface"]], "dice_ml.explainer_interfaces package": [[2, "dice-ml-explainer-interfaces-package"]], "dice_ml.explainer_interfaces.dice_KD module": [[2, "module-dice_ml.explainer_interfaces.dice_KD"]], "dice_ml.explainer_interfaces.dice_genetic module": [[2, "module-dice_ml.explainer_interfaces.dice_genetic"]], "dice_ml.explainer_interfaces.dice_pytorch module": [[2, "module-dice_ml.explainer_interfaces.dice_pytorch"]], "dice_ml.explainer_interfaces.dice_random module": [[2, "module-dice_ml.explainer_interfaces.dice_random"]], "dice_ml.explainer_interfaces.dice_tensorflow1 module": [[2, "module-dice_ml.explainer_interfaces.dice_tensorflow1"]], "dice_ml.explainer_interfaces.dice_tensorflow2 module": [[2, "module-dice_ml.explainer_interfaces.dice_tensorflow2"]], "dice_ml.explainer_interfaces.explainer_base module": [[2, "module-dice_ml.explainer_interfaces.explainer_base"]], "dice_ml.explainer_interfaces.feasible_base_vae module": [[2, "module-dice_ml.explainer_interfaces.feasible_base_vae"]], "dice_ml.explainer_interfaces.feasible_model_approx module": [[2, "module-dice_ml.explainer_interfaces.feasible_model_approx"]], "dice_ml.model_interfaces package": [[3, "dice-ml-model-interfaces-package"]], "dice_ml.model_interfaces.base_model module": [[3, "module-dice_ml.model_interfaces.base_model"]], "dice_ml.model_interfaces.keras_tensorflow_model module": [[3, "module-dice_ml.model_interfaces.keras_tensorflow_model"]], "dice_ml.model_interfaces.pytorch_model module": [[3, "module-dice_ml.model_interfaces.pytorch_model"]], "dice_ml.schema package": [[4, "dice-ml-schema-package"]], "dice_ml.utils package": [[5, "dice-ml-utils-package"]], "dice_ml.utils.exception module": [[5, "module-dice_ml.utils.exception"]], "dice_ml.utils.helpers module": [[5, "module-dice_ml.utils.helpers"]], "dice_ml.utils.neuralnetworks module": [[5, "module-dice_ml.utils.neuralnetworks"]], "dice_ml.utils.serialize module": [[5, "module-dice_ml.utils.serialize"]], "dice_ml.utils.sample_architecture package": [[6, "dice-ml-utils-sample-architecture-package"]], "dice_ml.utils.sample_architecture.vae_model module": [[6, "module-dice_ml.utils.sample_architecture.vae_model"]], "Diverse Counterfactual Explanations (DiCE) for ML": [[7, "diverse-counterfactual-explanations-dice-for-ml"], [18, "diverse-counterfactual-explanations-dice-for-ml"]], "Installing DICE": [[7, "installing-dice"], [18, "installing-dice"]], "Getting started with DiCE": [[7, "getting-started-with-dice"], [18, "getting-started-with-dice"]], "Supported methods for generating counterfactuals": [[7, "supported-methods-for-generating-counterfactuals"], [18, "supported-methods-for-generating-counterfactuals"]], "Supported use-cases": [[7, "supported-use-cases"], [18, "supported-use-cases"]], "Feasibility of counterfactual explanations": [[7, "feasibility-of-counterfactual-explanations"], [18, "feasibility-of-counterfactual-explanations"]], "The promise of counterfactual explanations": [[7, "the-promise-of-counterfactual-explanations"], [18, "the-promise-of-counterfactual-explanations"]], "Roadmap": [[7, "roadmap"], [18, "roadmap"]], "Citing": [[7, "citing"], [18, "citing"]], "Contributing": [[7, "contributing"], [18, "contributing"]], "Getting Started:": [[7, null]], "Notebooks:": [[7, null], [17, null]], "Package:": [[7, null]], "Indices and tables": [[7, "indices-and-tables"]], "dice_ml": [[8, "dice-ml"]], "Benchmarking different CF explanation methods": [[9, "Benchmarking-different-CF-explanation-methods"]], "Loading dataset": [[9, "Loading-dataset"], [13, "Loading-dataset"], [15, "Loading-dataset"]], "Training the ML model": [[9, "Training-the-ML-model"]], "Initialize counterfactual generation methods": [[9, "Initialize-counterfactual-generation-methods"]], "Generate Counterfactuals": [[9, "Generate-Counterfactuals"]], "Estimating local and global feature importance scores using DiCE": [[10, "Estimating-local-and-global-feature-importance-scores-using-DiCE"]], "Preliminaries: Loading the data and ML model": [[10, "Preliminaries:-Loading-the-data-and-ML-model"]], "Local feature importance": [[10, "Local-feature-importance"]], "Global importance": [[10, "Global-importance"]], "Convert the counterfactual output to json": [[10, "Convert-the-counterfactual-output-to-json"]], "Convert the json output to a counterfactual object": [[10, "Convert-the-json-output-to-a-counterfactual-object"]], "Quick introduction to generating counterfactual explanations using DiCE": [[11, "Quick-introduction-to-generating-counterfactual-explanations-using-DiCE"]], "Preliminaries: Loading a dataset and a ML model trained over it": [[11, "Preliminaries:-Loading-a-dataset-and-a-ML-model-trained-over-it"]], "Loading the Adult dataset": [[11, "Loading-the-Adult-dataset"]], "Loading the ML model": [[11, "Loading-the-ML-model"]], "Generating counterfactual examples using DiCE": [[11, "Generating-counterfactual-examples-using-DiCE"]], "Generating feature attributions (local and global) using DiCE": [[11, "Generating-feature-attributions-(local-and-global)-using-DiCE"]], "Local feature importance scores": [[11, "Local-feature-importance-scores"]], "Global feature importance scores": [[11, "Global-feature-importance-scores"]], "Working with deep learning models (TensorFlow and PyTorch)": [[11, "Working-with-deep-learning-models-(TensorFlow-and-PyTorch)"]], "Explaining a Tensorflow model": [[11, "Explaining-a-Tensorflow-model"]], "Explaining a Pytorch model": [[11, "Explaining-a-Pytorch-model"]], "More resources: What\u2019s next?": [[11, "More-resources:-What\u2019s-next?"]], "Generating counterfactual explanations with any ML model": [[13, "Generating-counterfactual-explanations-with-any-ML-model"]], "1. Independent random sampling of features": [[13, "1.-Independent-random-sampling-of-features"]], "Training a custom ML model": [[13, "Training-a-custom-ML-model"], [13, "id1"], [13, "id3"]], "Generate diverse counterfactuals": [[13, "Generate-diverse-counterfactuals"], [13, "id2"], [13, "id4"], [15, "Generate-diverse-counterfactuals"], [16, "Generate-diverse-counterfactuals"], [16, "id1"]], "Selecting the features to vary": [[13, "Selecting-the-features-to-vary"], [13, "id5"]], "Choosing feature ranges": [[13, "Choosing-feature-ranges"]], "2. Genetic Algorithm": [[13, "2.-Genetic-Algorithm"]], "3. Querying a KD Tree": [[13, "3.-Querying-a-KD-Tree"]], "Selecting the feature ranges": [[13, "Selecting-the-feature-ranges"]], "Generating counterfactuals for multi-class classification and regression models": [[14, "Generating-counterfactuals-for-multi-class-classification-and-regression-models"]], "Multiclass Classification": [[14, "Multiclass-Classification"]], "Regression": [[14, "Regression"]], "Advanced options to customize Counterfactual Explanations": [[15, "Advanced-options-to-customize-Counterfactual-Explanations"]], "1. Loading a custom ML model": [[15, "1.-Loading-a-custom-ML-model"]], "2. Changing feature weights": [[15, "2.-Changing-feature-weights"]], "3. Trading off between proximity and diversity goals": [[15, "3.-Trading-off-between-proximity-and-diversity-goals"]], "Generating counterfactual explanations without access to training data": [[16, "Generating-counterfactual-explanations-without-access-to-training-data"]], "Defining meta data": [[16, "Defining-meta-data"]], "Explaining pre-trained sklearn models": [[16, "Explaining-pre-trained-sklearn-models"]], "Explaining pre-trained deep learning models": [[16, "Explaining-pre-trained-deep-learning-models"]]}, "indexentries": {"all (dice_ml.constants.backendtypes attribute)": [[0, "dice_ml.constants.BackEndTypes.ALL"]], "all (dice_ml.constants.modeltypes attribute)": [[0, "dice_ml.constants.ModelTypes.ALL"]], "backendtypes (class in dice_ml.constants)": [[0, "dice_ml.constants.BackEndTypes"]], "classifier (dice_ml.constants.modeltypes attribute)": [[0, "dice_ml.constants.ModelTypes.Classifier"]], "counterfactualexamples (class in dice_ml.diverse_counterfactuals)": [[0, "dice_ml.diverse_counterfactuals.CounterfactualExamples"]], "counterfactualexplanations (class in dice_ml.counterfactual_explanations)": [[0, "dice_ml.counterfactual_explanations.CounterfactualExplanations"]], "data (class in dice_ml)": [[0, "dice_ml.Data"]], "data (class in dice_ml.data)": [[0, "dice_ml.data.Data"]], "dice (class in dice_ml)": [[0, "dice_ml.Dice"]], "dice (class in dice_ml.dice)": [[0, "dice_ml.dice.Dice"]], "genetic (dice_ml.constants.samplingstrategy attribute)": [[0, "dice_ml.constants.SamplingStrategy.Genetic"]], "gradient (dice_ml.constants.samplingstrategy attribute)": [[0, "dice_ml.constants.SamplingStrategy.Gradient"]], "kdtree (dice_ml.constants.samplingstrategy attribute)": [[0, "dice_ml.constants.SamplingStrategy.KdTree"]], "model (class in dice_ml)": [[0, "dice_ml.Model"]], "model (class in dice_ml.model)": [[0, "dice_ml.model.Model"]], "modeltypes (class in dice_ml.constants)": [[0, "dice_ml.constants.ModelTypes"]], "pytorch (dice_ml.constants.backendtypes attribute)": [[0, "dice_ml.constants.BackEndTypes.Pytorch"]], "random (dice_ml.constants.samplingstrategy attribute)": [[0, "dice_ml.constants.SamplingStrategy.Random"]], "regressor (dice_ml.constants.modeltypes attribute)": [[0, "dice_ml.constants.ModelTypes.Regressor"]], "samplingstrategy (class in dice_ml.constants)": [[0, "dice_ml.constants.SamplingStrategy"]], "sklearn (dice_ml.constants.backendtypes attribute)": [[0, "dice_ml.constants.BackEndTypes.Sklearn"]], "tensorflow1 (dice_ml.constants.backendtypes attribute)": [[0, "dice_ml.constants.BackEndTypes.Tensorflow1"]], "tensorflow2 (dice_ml.constants.backendtypes attribute)": [[0, "dice_ml.constants.BackEndTypes.Tensorflow2"]], "cf_examples_list (dice_ml.counterfactual_explanations.counterfactualexplanations property)": [[0, "dice_ml.counterfactual_explanations.CounterfactualExplanations.cf_examples_list"]], "decide() (in module dice_ml.data)": [[0, "dice_ml.data.decide"]], "decide() (in module dice_ml.dice)": [[0, "dice_ml.dice.decide"]], "decide() (in module dice_ml.model)": [[0, "dice_ml.model.decide"]], "decide_implementation_type() (dice_ml.data method)": [[0, "dice_ml.Data.decide_implementation_type"]], "decide_implementation_type() (dice_ml.dice method)": [[0, "dice_ml.Dice.decide_implementation_type"]], "decide_implementation_type() (dice_ml.model method)": [[0, "dice_ml.Model.decide_implementation_type"]], "decide_implementation_type() (dice_ml.data.data method)": [[0, "dice_ml.data.Data.decide_implementation_type"]], "decide_implementation_type() (dice_ml.dice.dice method)": [[0, "dice_ml.dice.Dice.decide_implementation_type"]], "decide_implementation_type() (dice_ml.model.model method)": [[0, "dice_ml.model.Model.decide_implementation_type"]], "dice_ml": [[0, "module-dice_ml"]], "dice_ml.constants": [[0, "module-dice_ml.constants"]], "dice_ml.counterfactual_explanations": [[0, "module-dice_ml.counterfactual_explanations"]], "dice_ml.data": [[0, "module-dice_ml.data"]], "dice_ml.dice": [[0, "module-dice_ml.dice"]], "dice_ml.diverse_counterfactuals": [[0, "module-dice_ml.diverse_counterfactuals"]], "dice_ml.model": [[0, "module-dice_ml.model"]], "display_df() (dice_ml.diverse_counterfactuals.counterfactualexamples method)": [[0, "dice_ml.diverse_counterfactuals.CounterfactualExamples.display_df"]], "from_json() (dice_ml.counterfactual_explanations.counterfactualexplanations static method)": [[0, "dice_ml.counterfactual_explanations.CounterfactualExplanations.from_json"]], "from_json() (dice_ml.diverse_counterfactuals.counterfactualexamples static method)": [[0, "dice_ml.diverse_counterfactuals.CounterfactualExamples.from_json"]], "json_converter() (in module dice_ml.diverse_counterfactuals)": [[0, "dice_ml.diverse_counterfactuals.json_converter"]], "local_importance (dice_ml.counterfactual_explanations.counterfactualexplanations property)": [[0, "dice_ml.counterfactual_explanations.CounterfactualExplanations.local_importance"]], "metadata (dice_ml.counterfactual_explanations.counterfactualexplanations property)": [[0, "dice_ml.counterfactual_explanations.CounterfactualExplanations.metadata"]], "module": [[0, "module-dice_ml"], [0, "module-dice_ml.constants"], [0, "module-dice_ml.counterfactual_explanations"], [0, "module-dice_ml.data"], [0, "module-dice_ml.dice"], [0, "module-dice_ml.diverse_counterfactuals"], [0, "module-dice_ml.model"], [1, "module-dice_ml.data_interfaces"], [1, "module-dice_ml.data_interfaces.base_data_interface"], [1, "module-dice_ml.data_interfaces.private_data_interface"], [1, "module-dice_ml.data_interfaces.public_data_interface"], [2, "module-dice_ml.explainer_interfaces"], [2, "module-dice_ml.explainer_interfaces.dice_KD"], [2, "module-dice_ml.explainer_interfaces.dice_genetic"], [2, "module-dice_ml.explainer_interfaces.dice_pytorch"], [2, "module-dice_ml.explainer_interfaces.dice_random"], [2, "module-dice_ml.explainer_interfaces.dice_tensorflow1"], [2, "module-dice_ml.explainer_interfaces.dice_tensorflow2"], [2, "module-dice_ml.explainer_interfaces.explainer_base"], [2, "module-dice_ml.explainer_interfaces.feasible_base_vae"], [2, "module-dice_ml.explainer_interfaces.feasible_model_approx"], [3, "module-dice_ml.model_interfaces"], [3, "module-dice_ml.model_interfaces.base_model"], [3, "module-dice_ml.model_interfaces.keras_tensorflow_model"], [3, "module-dice_ml.model_interfaces.pytorch_model"], [4, "module-dice_ml.schema"], [5, "module-dice_ml.utils"], [5, "module-dice_ml.utils.exception"], [5, "module-dice_ml.utils.helpers"], [5, "module-dice_ml.utils.neuralnetworks"], [5, "module-dice_ml.utils.serialize"], [6, "module-dice_ml.utils.sample_architecture"], [6, "module-dice_ml.utils.sample_architecture.vae_model"]], "print_list() (dice_ml.diverse_counterfactuals.counterfactualexamples method)": [[0, "dice_ml.diverse_counterfactuals.CounterfactualExamples.print_list"]], "summary_importance (dice_ml.counterfactual_explanations.counterfactualexplanations property)": [[0, "dice_ml.counterfactual_explanations.CounterfactualExplanations.summary_importance"]], "to_json() (dice_ml.counterfactual_explanations.counterfactualexplanations method)": [[0, "dice_ml.counterfactual_explanations.CounterfactualExplanations.to_json"]], "to_json() (dice_ml.diverse_counterfactuals.counterfactualexamples method)": [[0, "dice_ml.diverse_counterfactuals.CounterfactualExamples.to_json"]], "visualize_as_dataframe() (dice_ml.counterfactual_explanations.counterfactualexplanations method)": [[0, "dice_ml.counterfactual_explanations.CounterfactualExplanations.visualize_as_dataframe"]], "visualize_as_dataframe() (dice_ml.diverse_counterfactuals.counterfactualexamples method)": [[0, "dice_ml.diverse_counterfactuals.CounterfactualExamples.visualize_as_dataframe"]], "visualize_as_list() (dice_ml.counterfactual_explanations.counterfactualexplanations method)": [[0, "dice_ml.counterfactual_explanations.CounterfactualExplanations.visualize_as_list"]], "visualize_as_list() (dice_ml.diverse_counterfactuals.counterfactualexamples method)": [[0, "dice_ml.diverse_counterfactuals.CounterfactualExamples.visualize_as_list"]], "privatedata (class in dice_ml.data_interfaces.private_data_interface)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData"]], "publicdata (class in dice_ml.data_interfaces.public_data_interface)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData"]], "create_ohe_params() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.create_ohe_params"]], "create_ohe_params() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.create_ohe_params"]], "de_normalize_data() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.de_normalize_data"]], "de_normalize_data() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.de_normalize_data"]], "dice_ml.data_interfaces": [[1, "module-dice_ml.data_interfaces"]], "dice_ml.data_interfaces.base_data_interface": [[1, "module-dice_ml.data_interfaces.base_data_interface"]], "dice_ml.data_interfaces.private_data_interface": [[1, "module-dice_ml.data_interfaces.private_data_interface"]], "dice_ml.data_interfaces.public_data_interface": [[1, "module-dice_ml.data_interfaces.public_data_interface"]], "fit_label_encoders() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.fit_label_encoders"]], "fit_label_encoders() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.fit_label_encoders"]], "from_dummies() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.from_dummies"]], "from_dummies() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.from_dummies"]], "from_label() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.from_label"]], "from_label() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.from_label"]], "get_all_dummy_colnames() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.get_all_dummy_colnames"]], "get_all_dummy_colnames() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.get_all_dummy_colnames"]], "get_data_params_for_gradient_dice() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.get_data_params_for_gradient_dice"]], "get_data_params_for_gradient_dice() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.get_data_params_for_gradient_dice"]], "get_data_type() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.get_data_type"]], "get_decimal_precisions() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.get_decimal_precisions"]], "get_decimal_precisions() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.get_decimal_precisions"]], "get_decoded_data() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.get_decoded_data"]], "get_decoded_data() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.get_decoded_data"]], "get_encoded_categorical_feature_indexes() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.get_encoded_categorical_feature_indexes"]], "get_encoded_categorical_feature_indexes() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.get_encoded_categorical_feature_indexes"]], "get_features_range() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.get_features_range"]], "get_features_range() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.get_features_range"]], "get_indexes_of_features_to_vary() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.get_indexes_of_features_to_vary"]], "get_indexes_of_features_to_vary() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.get_indexes_of_features_to_vary"]], "get_inverse_ohe_min_max_normalized_data() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.get_inverse_ohe_min_max_normalized_data"]], "get_inverse_ohe_min_max_normalized_data() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.get_inverse_ohe_min_max_normalized_data"]], "get_mads() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.get_mads"]], "get_mads() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.get_mads"]], "get_minx_maxx() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.get_minx_maxx"]], "get_minx_maxx() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.get_minx_maxx"]], "get_ohe_min_max_normalized_data() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.get_ohe_min_max_normalized_data"]], "get_ohe_min_max_normalized_data() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.get_ohe_min_max_normalized_data"]], "get_quantiles_from_training_data() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.get_quantiles_from_training_data"]], "get_valid_feature_range() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.get_valid_feature_range"]], "get_valid_feature_range() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.get_valid_feature_range"]], "get_valid_mads() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.get_valid_mads"]], "get_valid_mads() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.get_valid_mads"]], "normalize_data() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.normalize_data"]], "normalize_data() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.normalize_data"]], "one_hot_encode_data() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.one_hot_encode_data"]], "one_hot_encode_data() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.one_hot_encode_data"]], "prepare_df_for_ohe_encoding() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.prepare_df_for_ohe_encoding"]], "prepare_df_for_ohe_encoding() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.prepare_df_for_ohe_encoding"]], "prepare_query_instance() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.prepare_query_instance"]], "prepare_query_instance() (dice_ml.data_interfaces.public_data_interface.publicdata method)": [[1, "dice_ml.data_interfaces.public_data_interface.PublicData.prepare_query_instance"]], "query_instance_to_df() (dice_ml.data_interfaces.private_data_interface.privatedata method)": [[1, "dice_ml.data_interfaces.private_data_interface.PrivateData.query_instance_to_df"]], "dicegenetic (class in dice_ml.explainer_interfaces.dice_genetic)": [[2, "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic"]], "dicekd (class in dice_ml.explainer_interfaces.dice_kd)": [[2, "dice_ml.explainer_interfaces.dice_KD.DiceKD"]], "dicepytorch (class in dice_ml.explainer_interfaces.dice_pytorch)": [[2, "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch"]], "dicerandom (class in dice_ml.explainer_interfaces.dice_random)": [[2, "dice_ml.explainer_interfaces.dice_random.DiceRandom"]], "dicetensorflow1 (class in dice_ml.explainer_interfaces.dice_tensorflow1)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1"]], "dicetensorflow2 (class in dice_ml.explainer_interfaces.dice_tensorflow2)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2"]], "explainerbase (class in dice_ml.explainer_interfaces.explainer_base)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase"]], "feasiblebasevae (class in dice_ml.explainer_interfaces.feasible_base_vae)": [[2, "dice_ml.explainer_interfaces.feasible_base_vae.FeasibleBaseVAE"]], "feasiblemodelapprox (class in dice_ml.explainer_interfaces.feasible_model_approx)": [[2, "dice_ml.explainer_interfaces.feasible_model_approx.FeasibleModelApprox"]], "build_kd_tree() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.build_KD_tree"]], "check_permitted_range() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.check_permitted_range"]], "check_query_instance_validity() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.check_query_instance_validity"]], "compute_dist() (dice_ml.explainer_interfaces.dice_pytorch.dicepytorch method)": [[2, "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch.compute_dist"]], "compute_dist() (dice_ml.explainer_interfaces.dice_tensorflow1.dicetensorflow1 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1.compute_dist"]], "compute_dist() (dice_ml.explainer_interfaces.dice_tensorflow2.dicetensorflow2 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2.compute_dist"]], "compute_diversity_loss() (dice_ml.explainer_interfaces.dice_pytorch.dicepytorch method)": [[2, "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch.compute_diversity_loss"]], "compute_diversity_loss() (dice_ml.explainer_interfaces.dice_tensorflow1.dicetensorflow1 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1.compute_diversity_loss"]], "compute_diversity_loss() (dice_ml.explainer_interfaces.dice_tensorflow2.dicetensorflow2 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2.compute_diversity_loss"]], "compute_loss() (dice_ml.explainer_interfaces.dice_genetic.dicegenetic method)": [[2, "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic.compute_loss"]], "compute_loss() (dice_ml.explainer_interfaces.dice_pytorch.dicepytorch method)": [[2, "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch.compute_loss"]], "compute_loss() (dice_ml.explainer_interfaces.dice_tensorflow2.dicetensorflow2 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2.compute_loss"]], "compute_loss() (dice_ml.explainer_interfaces.feasible_base_vae.feasiblebasevae method)": [[2, "dice_ml.explainer_interfaces.feasible_base_vae.FeasibleBaseVAE.compute_loss"]], "compute_proximity_loss() (dice_ml.explainer_interfaces.dice_genetic.dicegenetic method)": [[2, "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic.compute_proximity_loss"]], "compute_proximity_loss() (dice_ml.explainer_interfaces.dice_pytorch.dicepytorch method)": [[2, "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch.compute_proximity_loss"]], "compute_proximity_loss() (dice_ml.explainer_interfaces.dice_tensorflow1.dicetensorflow1 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1.compute_proximity_loss"]], "compute_proximity_loss() (dice_ml.explainer_interfaces.dice_tensorflow2.dicetensorflow2 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2.compute_proximity_loss"]], "compute_regularization_loss() (dice_ml.explainer_interfaces.dice_pytorch.dicepytorch method)": [[2, "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch.compute_regularization_loss"]], "compute_regularization_loss() (dice_ml.explainer_interfaces.dice_tensorflow1.dicetensorflow1 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1.compute_regularization_loss"]], "compute_regularization_loss() (dice_ml.explainer_interfaces.dice_tensorflow2.dicetensorflow2 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2.compute_regularization_loss"]], "compute_sparsity_loss() (dice_ml.explainer_interfaces.dice_genetic.dicegenetic method)": [[2, "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic.compute_sparsity_loss"]], "compute_yloss() (dice_ml.explainer_interfaces.dice_genetic.dicegenetic method)": [[2, "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic.compute_yloss"]], "compute_yloss() (dice_ml.explainer_interfaces.dice_pytorch.dicepytorch method)": [[2, "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch.compute_yloss"]], "compute_yloss() (dice_ml.explainer_interfaces.dice_tensorflow1.dicetensorflow1 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1.compute_yloss"]], "compute_yloss() (dice_ml.explainer_interfaces.dice_tensorflow2.dicetensorflow2 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2.compute_yloss"]], "decide_cf_validity() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.decide_cf_validity"]], "decode_model_output() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.decode_model_output"]], "decode_to_original_labels() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.decode_to_original_labels"]], "deserialize_explainer() (dice_ml.explainer_interfaces.explainer_base.explainerbase static method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.deserialize_explainer"]], "dice_ml.explainer_interfaces": [[2, "module-dice_ml.explainer_interfaces"]], "dice_ml.explainer_interfaces.dice_kd": [[2, "module-dice_ml.explainer_interfaces.dice_KD"]], "dice_ml.explainer_interfaces.dice_genetic": [[2, "module-dice_ml.explainer_interfaces.dice_genetic"]], "dice_ml.explainer_interfaces.dice_pytorch": [[2, "module-dice_ml.explainer_interfaces.dice_pytorch"]], "dice_ml.explainer_interfaces.dice_random": [[2, "module-dice_ml.explainer_interfaces.dice_random"]], "dice_ml.explainer_interfaces.dice_tensorflow1": [[2, "module-dice_ml.explainer_interfaces.dice_tensorflow1"]], "dice_ml.explainer_interfaces.dice_tensorflow2": [[2, "module-dice_ml.explainer_interfaces.dice_tensorflow2"]], "dice_ml.explainer_interfaces.explainer_base": [[2, "module-dice_ml.explainer_interfaces.explainer_base"]], "dice_ml.explainer_interfaces.feasible_base_vae": [[2, "module-dice_ml.explainer_interfaces.feasible_base_vae"]], "dice_ml.explainer_interfaces.feasible_model_approx": [[2, "module-dice_ml.explainer_interfaces.feasible_model_approx"]], "do_kd_init() (dice_ml.explainer_interfaces.dice_genetic.dicegenetic method)": [[2, "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic.do_KD_init"]], "do_binary_search() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.do_binary_search"]], "do_cf_initializations() (dice_ml.explainer_interfaces.dice_genetic.dicegenetic method)": [[2, "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic.do_cf_initializations"]], "do_cf_initializations() (dice_ml.explainer_interfaces.dice_pytorch.dicepytorch method)": [[2, "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch.do_cf_initializations"]], "do_cf_initializations() (dice_ml.explainer_interfaces.dice_tensorflow1.dicetensorflow1 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1.do_cf_initializations"]], "do_cf_initializations() (dice_ml.explainer_interfaces.dice_tensorflow2.dicetensorflow2 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2.do_cf_initializations"]], "do_linear_search() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.do_linear_search"]], "do_loss_initializations() (dice_ml.explainer_interfaces.dice_genetic.dicegenetic method)": [[2, "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic.do_loss_initializations"]], "do_loss_initializations() (dice_ml.explainer_interfaces.dice_pytorch.dicepytorch method)": [[2, "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch.do_loss_initializations"]], "do_loss_initializations() (dice_ml.explainer_interfaces.dice_tensorflow1.dicetensorflow1 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1.do_loss_initializations"]], "do_loss_initializations() (dice_ml.explainer_interfaces.dice_tensorflow2.dicetensorflow2 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2.do_loss_initializations"]], "do_optimizer_initializations() (dice_ml.explainer_interfaces.dice_pytorch.dicepytorch method)": [[2, "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch.do_optimizer_initializations"]], "do_optimizer_initializations() (dice_ml.explainer_interfaces.dice_tensorflow1.dicetensorflow1 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1.do_optimizer_initializations"]], "do_optimizer_initializations() (dice_ml.explainer_interfaces.dice_tensorflow2.dicetensorflow2 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2.do_optimizer_initializations"]], "do_param_initializations() (dice_ml.explainer_interfaces.dice_genetic.dicegenetic method)": [[2, "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic.do_param_initializations"]], "do_posthoc_sparsity_enhancement() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.do_posthoc_sparsity_enhancement"]], "do_random_init() (dice_ml.explainer_interfaces.dice_genetic.dicegenetic method)": [[2, "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic.do_random_init"]], "do_sparsity_check() (dice_ml.explainer_interfaces.dice_kd.dicekd method)": [[2, "dice_ml.explainer_interfaces.dice_KD.DiceKD.do_sparsity_check"]], "dpp_style() (dice_ml.explainer_interfaces.dice_pytorch.dicepytorch method)": [[2, "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch.dpp_style"]], "dpp_style() (dice_ml.explainer_interfaces.dice_tensorflow1.dicetensorflow1 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1.dpp_style"]], "dpp_style() (dice_ml.explainer_interfaces.dice_tensorflow2.dicetensorflow2 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2.dpp_style"]], "duplicates() (dice_ml.explainer_interfaces.dice_kd.dicekd method)": [[2, "dice_ml.explainer_interfaces.dice_KD.DiceKD.duplicates"]], "feature_importance() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.feature_importance"]], "find_counterfactuals() (dice_ml.explainer_interfaces.dice_kd.dicekd method)": [[2, "dice_ml.explainer_interfaces.dice_KD.DiceKD.find_counterfactuals"]], "find_counterfactuals() (dice_ml.explainer_interfaces.dice_genetic.dicegenetic method)": [[2, "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic.find_counterfactuals"]], "find_counterfactuals() (dice_ml.explainer_interfaces.dice_pytorch.dicepytorch method)": [[2, "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch.find_counterfactuals"]], "find_counterfactuals() (dice_ml.explainer_interfaces.dice_tensorflow1.dicetensorflow1 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1.find_counterfactuals"]], "find_counterfactuals() (dice_ml.explainer_interfaces.dice_tensorflow2.dicetensorflow2 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2.find_counterfactuals"]], "generate_counterfactuals() (dice_ml.explainer_interfaces.dice_tensorflow1.dicetensorflow1 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1.generate_counterfactuals"]], "generate_counterfactuals() (dice_ml.explainer_interfaces.dice_tensorflow2.dicetensorflow2 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2.generate_counterfactuals"]], "generate_counterfactuals() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.generate_counterfactuals"]], "generate_counterfactuals() (dice_ml.explainer_interfaces.feasible_base_vae.feasiblebasevae method)": [[2, "dice_ml.explainer_interfaces.feasible_base_vae.FeasibleBaseVAE.generate_counterfactuals"]], "get_continuous_samples() (dice_ml.explainer_interfaces.dice_random.dicerandom method)": [[2, "dice_ml.explainer_interfaces.dice_random.DiceRandom.get_continuous_samples"]], "get_model_output() (dice_ml.explainer_interfaces.dice_pytorch.dicepytorch method)": [[2, "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch.get_model_output"]], "get_model_output_from_scores() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.get_model_output_from_scores"]], "get_samples() (dice_ml.explainer_interfaces.dice_random.dicerandom method)": [[2, "dice_ml.explainer_interfaces.dice_random.DiceRandom.get_samples"]], "get_valid_feature_range() (dice_ml.explainer_interfaces.dice_genetic.dicegenetic method)": [[2, "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic.get_valid_feature_range"]], "global_feature_importance() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.global_feature_importance"]], "infer_target_cfs_class() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.infer_target_cfs_class"]], "infer_target_cfs_range() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.infer_target_cfs_range"]], "initialize_cfs() (dice_ml.explainer_interfaces.dice_pytorch.dicepytorch method)": [[2, "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch.initialize_CFs"]], "initialize_cfs() (dice_ml.explainer_interfaces.dice_tensorflow1.dicetensorflow1 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1.initialize_CFs"]], "initialize_cfs() (dice_ml.explainer_interfaces.dice_tensorflow2.dicetensorflow2 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2.initialize_CFs"]], "is_cf_valid() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.is_cf_valid"]], "label_decode() (dice_ml.explainer_interfaces.dice_genetic.dicegenetic method)": [[2, "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic.label_decode"]], "label_decode_cfs() (dice_ml.explainer_interfaces.dice_genetic.dicegenetic method)": [[2, "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic.label_decode_cfs"]], "label_encode() (dice_ml.explainer_interfaces.dice_genetic.dicegenetic method)": [[2, "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic.label_encode"]], "local_feature_importance() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.local_feature_importance"]], "mate() (dice_ml.explainer_interfaces.dice_genetic.dicegenetic method)": [[2, "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic.mate"]], "misc_init() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.misc_init"]], "predict_fn() (dice_ml.explainer_interfaces.dice_kd.dicekd method)": [[2, "dice_ml.explainer_interfaces.dice_KD.DiceKD.predict_fn"]], "predict_fn() (dice_ml.explainer_interfaces.dice_genetic.dicegenetic method)": [[2, "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic.predict_fn"]], "predict_fn() (dice_ml.explainer_interfaces.dice_pytorch.dicepytorch method)": [[2, "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch.predict_fn"]], "predict_fn() (dice_ml.explainer_interfaces.dice_tensorflow1.dicetensorflow1 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1.predict_fn"]], "predict_fn() (dice_ml.explainer_interfaces.dice_tensorflow2.dicetensorflow2 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2.predict_fn"]], "predict_fn() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.predict_fn"]], "predict_fn_for_sparsity() (dice_ml.explainer_interfaces.dice_pytorch.dicepytorch method)": [[2, "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch.predict_fn_for_sparsity"]], "predict_fn_for_sparsity() (dice_ml.explainer_interfaces.dice_tensorflow1.dicetensorflow1 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1.predict_fn_for_sparsity"]], "predict_fn_for_sparsity() (dice_ml.explainer_interfaces.dice_tensorflow2.dicetensorflow2 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2.predict_fn_for_sparsity"]], "predict_fn_for_sparsity() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.predict_fn_for_sparsity"]], "predict_fn_scores() (dice_ml.explainer_interfaces.dice_kd.dicekd method)": [[2, "dice_ml.explainer_interfaces.dice_KD.DiceKD.predict_fn_scores"]], "predict_fn_scores() (dice_ml.explainer_interfaces.dice_genetic.dicegenetic method)": [[2, "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic.predict_fn_scores"]], "round_off_cfs() (dice_ml.explainer_interfaces.dice_pytorch.dicepytorch method)": [[2, "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch.round_off_cfs"]], "round_off_cfs() (dice_ml.explainer_interfaces.dice_tensorflow1.dicetensorflow1 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1.round_off_cfs"]], "round_off_cfs() (dice_ml.explainer_interfaces.dice_tensorflow2.dicetensorflow2 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2.round_off_cfs"]], "round_to_precision() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.round_to_precision"]], "scipy_optimizers() (dice_ml.explainer_interfaces.dice_tensorflow1.dicetensorflow1 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1.scipy_optimizers"]], "serialize_explainer() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.serialize_explainer"]], "setup() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.setup"]], "sigmoid() (dice_ml.explainer_interfaces.explainer_base.explainerbase method)": [[2, "dice_ml.explainer_interfaces.explainer_base.ExplainerBase.sigmoid"]], "stop_loop() (dice_ml.explainer_interfaces.dice_pytorch.dicepytorch method)": [[2, "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch.stop_loop"]], "stop_loop() (dice_ml.explainer_interfaces.dice_tensorflow1.dicetensorflow1 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1.stop_loop"]], "stop_loop() (dice_ml.explainer_interfaces.dice_tensorflow2.dicetensorflow2 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2.stop_loop"]], "tensorflow_optimizers() (dice_ml.explainer_interfaces.dice_tensorflow1.dicetensorflow1 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1.tensorflow_optimizers"]], "train() (dice_ml.explainer_interfaces.feasible_base_vae.feasiblebasevae method)": [[2, "dice_ml.explainer_interfaces.feasible_base_vae.FeasibleBaseVAE.train"]], "train() (dice_ml.explainer_interfaces.feasible_model_approx.feasiblemodelapprox method)": [[2, "dice_ml.explainer_interfaces.feasible_model_approx.FeasibleModelApprox.train"]], "update_hyperparameters() (dice_ml.explainer_interfaces.dice_genetic.dicegenetic method)": [[2, "dice_ml.explainer_interfaces.dice_genetic.DiceGenetic.update_hyperparameters"]], "update_hyperparameters() (dice_ml.explainer_interfaces.dice_pytorch.dicepytorch method)": [[2, "dice_ml.explainer_interfaces.dice_pytorch.DicePyTorch.update_hyperparameters"]], "update_hyperparameters() (dice_ml.explainer_interfaces.dice_tensorflow1.dicetensorflow1 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow1.DiceTensorFlow1.update_hyperparameters"]], "update_hyperparameters() (dice_ml.explainer_interfaces.dice_tensorflow2.dicetensorflow2 method)": [[2, "dice_ml.explainer_interfaces.dice_tensorflow2.DiceTensorFlow2.update_hyperparameters"]], "vary_valid() (dice_ml.explainer_interfaces.dice_kd.dicekd method)": [[2, "dice_ml.explainer_interfaces.dice_KD.DiceKD.vary_valid"]], "basemodel (class in dice_ml.model_interfaces.base_model)": [[3, "dice_ml.model_interfaces.base_model.BaseModel"]], "kerastensorflowmodel (class in dice_ml.model_interfaces.keras_tensorflow_model)": [[3, "dice_ml.model_interfaces.keras_tensorflow_model.KerasTensorFlowModel"]], "pytorchmodel (class in dice_ml.model_interfaces.pytorch_model)": [[3, "dice_ml.model_interfaces.pytorch_model.PyTorchModel"]], "dice_ml.model_interfaces": [[3, "module-dice_ml.model_interfaces"]], "dice_ml.model_interfaces.base_model": [[3, "module-dice_ml.model_interfaces.base_model"]], "dice_ml.model_interfaces.keras_tensorflow_model": [[3, "module-dice_ml.model_interfaces.keras_tensorflow_model"]], "dice_ml.model_interfaces.pytorch_model": [[3, "module-dice_ml.model_interfaces.pytorch_model"]], "get_gradient() (dice_ml.model_interfaces.base_model.basemodel method)": [[3, "dice_ml.model_interfaces.base_model.BaseModel.get_gradient"]], "get_gradient() (dice_ml.model_interfaces.keras_tensorflow_model.kerastensorflowmodel method)": [[3, "dice_ml.model_interfaces.keras_tensorflow_model.KerasTensorFlowModel.get_gradient"]], "get_gradient() (dice_ml.model_interfaces.pytorch_model.pytorchmodel method)": [[3, "dice_ml.model_interfaces.pytorch_model.PyTorchModel.get_gradient"]], "get_num_output_nodes() (dice_ml.model_interfaces.base_model.basemodel method)": [[3, "dice_ml.model_interfaces.base_model.BaseModel.get_num_output_nodes"]], "get_num_output_nodes() (dice_ml.model_interfaces.keras_tensorflow_model.kerastensorflowmodel method)": [[3, "dice_ml.model_interfaces.keras_tensorflow_model.KerasTensorFlowModel.get_num_output_nodes"]], "get_num_output_nodes() (dice_ml.model_interfaces.pytorch_model.pytorchmodel method)": [[3, "dice_ml.model_interfaces.pytorch_model.PyTorchModel.get_num_output_nodes"]], "get_num_output_nodes2() (dice_ml.model_interfaces.base_model.basemodel method)": [[3, "dice_ml.model_interfaces.base_model.BaseModel.get_num_output_nodes2"]], "get_output() (dice_ml.model_interfaces.base_model.basemodel method)": [[3, "dice_ml.model_interfaces.base_model.BaseModel.get_output"]], "get_output() (dice_ml.model_interfaces.keras_tensorflow_model.kerastensorflowmodel method)": [[3, "dice_ml.model_interfaces.keras_tensorflow_model.KerasTensorFlowModel.get_output"]], "get_output() (dice_ml.model_interfaces.pytorch_model.pytorchmodel method)": [[3, "dice_ml.model_interfaces.pytorch_model.PyTorchModel.get_output"]], "load_model() (dice_ml.model_interfaces.base_model.basemodel method)": [[3, "dice_ml.model_interfaces.base_model.BaseModel.load_model"]], "load_model() (dice_ml.model_interfaces.keras_tensorflow_model.kerastensorflowmodel method)": [[3, "dice_ml.model_interfaces.keras_tensorflow_model.KerasTensorFlowModel.load_model"]], "load_model() (dice_ml.model_interfaces.pytorch_model.pytorchmodel method)": [[3, "dice_ml.model_interfaces.pytorch_model.PyTorchModel.load_model"]], "set_eval_mode() (dice_ml.model_interfaces.pytorch_model.pytorchmodel method)": [[3, "dice_ml.model_interfaces.pytorch_model.PyTorchModel.set_eval_mode"]], "dice_ml.schema": [[4, "module-dice_ml.schema"]], "datatransfomer (class in dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.DataTransfomer"]], "dummydatainterface (class in dice_ml.utils.serialize)": [[5, "dice_ml.utils.serialize.DummyDataInterface"]], "ffnetwork (class in dice_ml.utils.neuralnetworks)": [[5, "dice_ml.utils.neuralnetworks.FFNetwork"]], "multiclassnetwork (class in dice_ml.utils.neuralnetworks)": [[5, "dice_ml.utils.neuralnetworks.MulticlassNetwork"]], "systemexception": [[5, "dice_ml.utils.exception.SystemException"]], "dice_ml.utils": [[5, "module-dice_ml.utils"]], "dice_ml.utils.exception": [[5, "module-dice_ml.utils.exception"]], "dice_ml.utils.helpers": [[5, "module-dice_ml.utils.helpers"]], "dice_ml.utils.neuralnetworks": [[5, "module-dice_ml.utils.neuralnetworks"]], "dice_ml.utils.serialize": [[5, "module-dice_ml.utils.serialize"]], "feed_data_params() (dice_ml.utils.helpers.datatransfomer method)": [[5, "dice_ml.utils.helpers.DataTransfomer.feed_data_params"]], "forward() (dice_ml.utils.neuralnetworks.ffnetwork method)": [[5, "dice_ml.utils.neuralnetworks.FFNetwork.forward"]], "forward() (dice_ml.utils.neuralnetworks.multiclassnetwork method)": [[5, "dice_ml.utils.neuralnetworks.MulticlassNetwork.forward"]], "get_adult_data_info() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.get_adult_data_info"]], "get_adult_income_modelpath() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.get_adult_income_modelpath"]], "get_base_gen_cf_initialization() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.get_base_gen_cf_initialization"]], "get_custom_dataset_modelpath_pipeline() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.get_custom_dataset_modelpath_pipeline"]], "get_custom_dataset_modelpath_pipeline_binary() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.get_custom_dataset_modelpath_pipeline_binary"]], "get_custom_dataset_modelpath_pipeline_multiclass() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.get_custom_dataset_modelpath_pipeline_multiclass"]], "get_custom_dataset_modelpath_pipeline_regression() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.get_custom_dataset_modelpath_pipeline_regression"]], "get_custom_vars_dataset_modelpath_pipeline() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.get_custom_vars_dataset_modelpath_pipeline"]], "initialize_transform_func() (dice_ml.utils.helpers.datatransfomer method)": [[5, "dice_ml.utils.helpers.DataTransfomer.initialize_transform_func"]], "inverse_ohe_min_max_transformation() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.inverse_ohe_min_max_transformation"]], "inverse_transform() (dice_ml.utils.helpers.datatransfomer method)": [[5, "dice_ml.utils.helpers.DataTransfomer.inverse_transform"]], "load_adult_income_dataset() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.load_adult_income_dataset"]], "load_custom_testing_dataset() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.load_custom_testing_dataset"]], "load_custom_testing_dataset_binary() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.load_custom_testing_dataset_binary"]], "load_custom_testing_dataset_binary_str() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.load_custom_testing_dataset_binary_str"]], "load_custom_testing_dataset_multiclass() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.load_custom_testing_dataset_multiclass"]], "load_custom_testing_dataset_multiclass_str() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.load_custom_testing_dataset_multiclass_str"]], "load_custom_testing_dataset_regression() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.load_custom_testing_dataset_regression"]], "load_min_max_equal_dataset() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.load_min_max_equal_dataset"]], "load_outcome_not_last_column_dataset() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.load_outcome_not_last_column_dataset"]], "ohe_min_max_transformation() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.ohe_min_max_transformation"]], "save_adult_income_model() (in module dice_ml.utils.helpers)": [[5, "dice_ml.utils.helpers.save_adult_income_model"]], "to_json() (dice_ml.utils.serialize.dummydatainterface method)": [[5, "dice_ml.utils.serialize.DummyDataInterface.to_json"]], "transform() (dice_ml.utils.helpers.datatransfomer method)": [[5, "dice_ml.utils.helpers.DataTransfomer.transform"]], "autoencoder (class in dice_ml.utils.sample_architecture.vae_model)": [[6, "dice_ml.utils.sample_architecture.vae_model.AutoEncoder"]], "cf_vae (class in dice_ml.utils.sample_architecture.vae_model)": [[6, "dice_ml.utils.sample_architecture.vae_model.CF_VAE"]], "compute_elbo() (dice_ml.utils.sample_architecture.vae_model.cf_vae method)": [[6, "dice_ml.utils.sample_architecture.vae_model.CF_VAE.compute_elbo"]], "decoder() (dice_ml.utils.sample_architecture.vae_model.autoencoder method)": [[6, "dice_ml.utils.sample_architecture.vae_model.AutoEncoder.decoder"]], "decoder() (dice_ml.utils.sample_architecture.vae_model.cf_vae method)": [[6, "dice_ml.utils.sample_architecture.vae_model.CF_VAE.decoder"]], "dice_ml.utils.sample_architecture": [[6, "module-dice_ml.utils.sample_architecture"]], "dice_ml.utils.sample_architecture.vae_model": [[6, "module-dice_ml.utils.sample_architecture.vae_model"]], "encoder() (dice_ml.utils.sample_architecture.vae_model.autoencoder method)": [[6, "dice_ml.utils.sample_architecture.vae_model.AutoEncoder.encoder"]], "encoder() (dice_ml.utils.sample_architecture.vae_model.cf_vae method)": [[6, "dice_ml.utils.sample_architecture.vae_model.CF_VAE.encoder"]], "forward() (dice_ml.utils.sample_architecture.vae_model.autoencoder method)": [[6, "dice_ml.utils.sample_architecture.vae_model.AutoEncoder.forward"]], "forward() (dice_ml.utils.sample_architecture.vae_model.cf_vae method)": [[6, "dice_ml.utils.sample_architecture.vae_model.CF_VAE.forward"]], "normal_likelihood() (dice_ml.utils.sample_architecture.vae_model.autoencoder method)": [[6, "dice_ml.utils.sample_architecture.vae_model.AutoEncoder.normal_likelihood"]], "normal_likelihood() (dice_ml.utils.sample_architecture.vae_model.cf_vae method)": [[6, "dice_ml.utils.sample_architecture.vae_model.CF_VAE.normal_likelihood"]], "sample_latent_code() (dice_ml.utils.sample_architecture.vae_model.autoencoder method)": [[6, "dice_ml.utils.sample_architecture.vae_model.AutoEncoder.sample_latent_code"]], "sample_latent_code() (dice_ml.utils.sample_architecture.vae_model.cf_vae method)": [[6, "dice_ml.utils.sample_architecture.vae_model.CF_VAE.sample_latent_code"]], "training (dice_ml.utils.sample_architecture.vae_model.autoencoder attribute)": [[6, "dice_ml.utils.sample_architecture.vae_model.AutoEncoder.training"]], "training (dice_ml.utils.sample_architecture.vae_model.cf_vae attribute)": [[6, "dice_ml.utils.sample_architecture.vae_model.CF_VAE.training"]]}})