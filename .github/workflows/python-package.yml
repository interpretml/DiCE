# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron:  '30 5 * * *'

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, macos-latest, windows-latest]
        exclude:
          - os: macos-latest
            python-version: "3.7"
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }} ${{ matrix.os }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip
    - name: Install core dependencies
      run: |
        pip install -r requirements.txt
    - name: Install deep learning dependencies
      run: |
        pip install -r requirements-deeplearning.txt
    - name: Install test dependencies
      run: |
        pip install -r requirements-test.txt
    - name: Test with pytest
      run: |
        # pytest
        pytest tests/ -m "not notebook_tests" --durations=10 --doctest-modules --junitxml=junit/test-results.xml --cov=dice_ml --cov-report=xml --cov-report=html
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action/composite@v1
      if: ${{ (matrix.python-version == '3.8') && (matrix.os == 'ubuntu-latest') }}
      with:
        files: junit/test-results.xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: ${{ (matrix.python-version == '3.8') && (matrix.os == 'ubuntu-latest') }}
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: .
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true
    - name: Check package consistency with twine
      run: |
        python setup.py check sdist bdist_wheel
        twine check dist/* 
