# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest, macos-latest]
        exclude:
          - os: macos-latest
            python-version: 3.8

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }} ${{ matrix.os }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
        pip install -r requirements.txt
        pip install -r requirements-deeplearning.txt
        pip install nbformat jupyter
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --max-complexity=30 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        # pytest
        pytest tests/ --doctest-modules --junitxml=junit/test-results.xml --cov=dice_ml --cov-report=xml --cov-report=html
        cat coverage.xml
    - name: Upload code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-results
        path: htmlcov
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
    - name: Check package consistency with twine
      run: |
        python setup.py check sdist bdist_wheel
        twine check dist/* 
